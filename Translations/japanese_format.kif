;  This program is free software; you can redistribute it and/or
;  modify it under the terms of the GNU Lesser General Public
;  License as published by the Free Software Foundation; either
;  version 2.1 of the License, or (at your option) any later version.
;
;  This program is distributed in the hope that it will be useful,
;  but WITHOUT ANY WARRANTY; without even the implied warranty of
;  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
;  Lesser General Public License for more details.
;
;  You should have received a copy of the GNU Lesser General Public
;  License along with this program; if not, write to the Free Software
;  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
;
; copyright Infosys 2019-

(documentation instance JapaneseLanguage "オブジェクトがその &%SetOrClass に含まれている場合、
オブジェクトは &%SetOrClass の &%instance である。個々は多くのクラス&%SetOrClass &%instance
である可能性があり、その一部は他のサブクラスである場合がある。したがって、特異性または一意性に関
する &%instance の意味の仮定はしない。")
(documentation immediateInstance JapaneseLanguage "オブジェクトがその &%SetOrClass の
&%instance で、かつ &%SetOrClass の適切なサブクラスの&%instance でない場合、 オブジェクトは、
&%SetOrClass の &%immediateInstance である。")
(documentation inverse JapaneseLanguage "&%BinaryRelation の逆は &%Relation であり、元の
&%Relation のすべてのタプルが逆になる。　言い換えれば、&%BinaryRelation は、引数が交換された時に
等しい場合、別の逆数になる。")
(documentation subclass JapaneseLanguage "(&%subclass ?CLASS1 ?CLASS2) とは、?CLASS1
が?CLASS2の &%subclass である、という意味である。例えば、?CLASS1のすべての &%instance も?CLASS2
の &%instance である。")
(documentation immediateSubclass JapaneseLanguage "&%SetOrClass ?CLASS1 は別の &%SetOrClass
?CLASS2 の &%immediateSubclass。万が一に備えて ?CLASS1 が ?CLASS2 の サブクラスで、および
?CLASS1 もそのサブクラスであるように、 ?CLASS2 の他のサブクラスはない。")
(documentation subrelation JapaneseLanguage "(&%subrelation ?REL1 ?REL2) とは、?REL1 の
すべてのタプルは ?REL2 のタプルでもある、という意味である。 言い換えれば、&%Relation ?REL1 は
いくつかの引数 arg_1、 arg_2 ... arg_n、 に対して保持される。　そして &%Relation ?REL2 は同じ
引数を保持する。 この結果、&%Relation とそのサブリレーションが同じ &%valence でなければなら
ない。")
(documentation domain JapaneseLanguage "特定の関係の引数タイプを宣言するための計算および
ヒューリスティックに便利なメカニズムの提供。 式 (&%domain ?REL ?INT ?CLASS) とは、リレーション
?RELのそれぞれのタプルの?INT番目の要素が?CLASSのインスタンスでなければならない、という意味である。
引数タイプを指定することはオントロジーの維持に非常に役立つ。　表現システムは、これらの仕様を使用して
用語を分類し、整合性制約を確認する。&%Relation の引数タイプの制限が、すでにオントロジーで定義され
ている &%SetOrClass でキャプチャされない場合、&%UnionFn、&%IntersectionFn などの関数を使用して
構成的に &%SetOrClass を指定できる。")
(documentation domainSubclass JapaneseLanguage "&%Predicates の引数タイプの制限を指定するた
めに使用される &%Predicate。　式 (&%domainSubclass ?REL ?INT ?CLASS) とは、リレーション?RELの
各タプルの？INT '番目の要素が?CLASSのサブクラスでなければならない、という意味である。")
(documentation equal JapaneseLanguage "(equal ?ENTITY1 ?ENTITY2) は、万が一に備え、?ENTITY1が
?ENTITY2と同じある場合に当てはまる。")
(documentation range JapaneseLanguage "関数の範囲を提供。 言い換えれば、(&%range ?FUNCTION
?CLASS) とは、?FUNCTIONによって割り当てられたすべての値は?CLASSの &%instances である、という
意味である。")
(documentation rangeSubclass JapaneseLanguage "(&%rangeSubclass ?FUNCTION ?CLASS) とは、
FUNCTIONによって割り当てられた値はすべて、?CLASSの &%subclass である、という意味である。")
(documentation valence JapaneseLanguage "関連できる引数の数を指定する。　関係に引数の固定数が
ない場合、それにはバレンスがなく、&%VariableArityRelation のインスタンスである。")
(documentation documentation JapaneseLanguage "議論ドメインと特定の &%HumanLanguage で
述べられている自然言語テキストの文字列のオブジェクト間の関係。 &%documentation のドメインは定数
（名前）だが、オブジェクト自体ではない。これは、ドキュメントに関連付けるときに名前を引用しない、
という意味である。")
(documentation format JapaneseLanguage "自然言語形式で表現を提示する方法を指定する関係。")
(documentation termFormat JapaneseLanguage "自然言語形式で用語を提示する方法を指定する関係。")
(documentation disjoint JapaneseLanguage "&%Classes は、 インスタンスを共有しない場合のみ
&%disjoint である。例えば、 &%IntersectionFn をそれらに適用した結果空の場合に備えて。")
(documentation disjointRelation JapaneseLanguage "この述部は、2つの &%Relations を関連付ける。
(&%disjointRelation ?REL1 ?REL2) とは、2つの関係にタプルがないことが共通している、という意味で
ある。")
(documentation contraryAttribute JapaneseLanguage "&%contraryAttribute は　&%Attributes の
セットで、これらの複数の &%Attributes を同時に持つことができない。　例えば、(&%contraryAttribute
&%Pliable &%Rigid) とは、&%Pliable と &%Rigid の両方が同時に存在できない、という意味である。")
(documentation exhaustiveAttribute JapaneseLanguage "この述部は &%Class から &%Attributes
のセットに関係している。要するに、このセットの要素が &%Class のインスタンスを使い果たす、という
意味である。　例えば、(&%exhaustiveAttribute &%PhysicalState &%Solid &%Fluid &%Liquid
&%Gas &%Plasma) とは&、%PhysicalState, すなわちインスタンス、が5つしかないことを意味している。
それらは &%Solid, &%Fluid, &%Liquid, &%Gas と &%Plasma である。")
(documentation exhaustiveDecomposition JapaneseLanguage "&%Class C の &%exhaustiveDecomposition
は、Cのサブクラスのセットで、Cのすべてのインスタンスはセット内のサブクラスの1つのインスタンスである。
注：これは必ずしもセットの要素が互いに素であることを意味しているわけではない（&%partitionを参照 -
a &%partition は互いに素な完全分解である)。")
(documentation disjointDecomposition JapaneseLanguage "&%Class C の &%disjointDecomposition
は、相互に &%disjoint であるCのサブクラスのセットである。")
(documentation partition JapaneseLanguage "&%Class C の &%partition は 相互に &%disjoint
クラス（サブクラスパーティション）で、C をカバーする。Cのすべてのインスタンスは、パーティション
内の正確な1つのサブクラスのインスタンスである。")
(documentation relatedInternalConcept JapaneseLanguage "2つの引数がSUMO内の関連する概念、と
いう意味である。例えば、それらの間での意味にはかなりの類似性がある。SUMO概念と別のソースからの概念
間の意味関係を示すには述語 &%relatedExternalConcept を使用する。")
(documentation relatedExternalConcept JapaneseLanguage "外部知識源の概念、SUMOの概念、および
他の知識源の名前など３箇所の名前の関係を表すために使用。")
(documentation synonymousExternalConcept JapaneseLanguage "(&%synonymousExternalConcept
?STRING ?THING ?LANGUAGE) とは、SUMO概念?THINGが?LANGUAGEの?STRINGと同じ、という意味である。")
(documentation subsumingExternalConcept JapaneseLanguage "(&%subsumingExternalConcept
?STRING ?THING ?LANGUAGE) とは、SUMO概念?THINGが?LANGUAGEの?STRINGの意味を含む、という意味で
ある。例えば、?THINGの概念は?STRINGより広い意味はがある。")
(documentation subsumedExternalConcept JapaneseLanguage "(&%subsumedExternalConcept
?STRING ?THING ?LANGUAGE)とはSUMO概念?THINGが?LANGUAGEの?STRINGに含まれる、という意味である。
例えば、?THINGの概念は?STRINGよりも意味が狭い。")
(documentation externalImage JapaneseLanguage "エンティティと何らかの方法で用語を表すまたは
例示するURL。")
(documentation subAttribute JapaneseLanguage "2番目の引数が、最初の引数が割り当てられているす
べてのものに割り当てられる、という意味である。")
(documentation successorAttribute JapaneseLanguage "(&%successorAttribute ?ATTR1 ?ATTR2)
とは、 それらが共有する規模で?ATTR2は、?ATTR1の直後にある&%Attribute、という意味である。")
(documentation successorAttributeClosure JapaneseLanguage "&%successorAttribute の推移的
閉鎖。 (&%successorAttributeClosure ?ATTR1 ?ATTR2) とは、?ATTR1と?ATTR2を接続する　
&%successorAttribute アサーションのチェーンがる、という意味である。")
(documentation greaterThanByQuality JapaneseLanguage "(greaterThanByQuality
?ENTITY1 ?ENTITY2 ?ATT) とは、?ENTITY1が?ENTITY2よりも与えられた品質?ATTがより多くある、という
意味である。")
(documentation entails JapaneseLanguage "論理含意のオペレータ。(&%entails ?FORMULA1
?FORMULA2) とは、?FORMULA2が、SUO-KIFの証明論によって?FORMULA2から導出できる、という意味であ
る。")
(documentation AssignmentFn JapaneseLanguage "FがN1,..., NKで示されるオブジェクトの値を持つ
&%Function である場合、(&%AssignmentFn F N1 ... NK) は、N1,..., NKで示されるオブジェクトにFを
適用する値である。")
(documentation PowerSetFn JapaneseLanguage "(&%PowerSetFn ?CLASS) は、&%SetOrClass ?CLASSを
?CLASSのすべての &%subclasses の&%SetOrClass へマップする。")
(documentation Entity JapaneseLanguage "個々の普遍集合。　これがオントロジーのノードのルートで
ある。")
(documentation Physical JapaneseLanguage "時空に位置するエンティティ。
注：場所はそれ自体時空にあると理解する。")
(documentation Object JapaneseLanguage "普通のオブジェクトのクラスにほぼ対応。　例には、通常の
物理的なオブジェクト、地理的な地域、&%Physical クラス内の &%Objects を補完する &%Processes の
場所など。　4Dオントロジーでは、&%Object は時空の範囲が時間軸にほぼ平行して部分的に分割されると
考えられる。")
(documentation SelfConnectedObject JapaneseLanguage "&%SelfConnectedObject は任意の &%Object
で、2つ以上の切断されたパーツで構成されていない。")
(documentation OrganicThing JapaneseLanguage "&%SelfConnectedObject は &%Organism からの
非意図的なプロセスによって生成される。
注：これは、主な原因のみを指す。つまり、&%PlantAgriculturalProduct は最初に &%Plant によって、
次に植物の世話をする &%Human によって生成される。")
(documentation FrontFn JapaneseLanguage "&%Function は一般的に最も注目される側に &%Object
をマップするか、もしくは通常 &%Object が移動する方向に向く。注：これは 一部の &%Objects に側面が
ない為、部分的関数である。例：リンゴと球。&%ImmediateFutureFn と &%ImmediatePastFn が無限
であるように、この &%Function の &%range も無限であることにも注意する。 最も一般的な事例
についての広範な主観間合意がある為、この不明確さは理論的な観点からは望ましくないが、重要な実用的
意義を持たない。")
(documentation BackFn JapaneseLanguage "&%Function は、&%Object の &%FrontFn の反対側に
マップされている。注：これは 一部の &%Objects に側面がない為、部分的関数である。例：リンゴと球。
&%ImmediateFutureFn と &%ImmediatePastFn が無限であるように、この &%Function の &%range も
無限であることにも注意する。 最も一般的な事例についての広範な主観間合意がある為、この不明確さは
理論的な観点からは望ましくないが、重要な実用的意義を持たない。")
(documentation part JapaneseLanguage "基本的な数学的関係。  他のすべての単なる関係は、この関係
で定義される。
(&%part ?PART ?WHOLE) とは、単に&%Object ?PARTは &%Object ?WHOLEの一部、という意味である。
注：&%part が　&%ReflexiveRelation のため、すべての &%Object はそれ自体の一部である。")
(documentation properPart JapaneseLanguage "(&%properPart ?OBJ1 ?OBJ2) とは、?OBJ1が?OBJ2
自体以外、?OBJ2の一部である。これは、&%TransitiveRelation と &%AsymmetricRelation である。
(したがって、&%IrreflexiveRelation)。")
(documentation piece JapaneseLanguage "&%Substances の任意のパーツの専門常識の概念の部分。
準同義語：チャンク、ハンク、ビット、など。　&%part のもう1つの下位関係である &%component と比較
する。")
(documentation component JapaneseLanguage "複合体の不均一な部品の専門常識の概念。 (&%component
?COMPONENT ?WHOLE) とは、?COMPONENTが?WHOLEのコンポーネント、という意味である。コンポーネントの
例として、家のドアや壁、国の州、または動物の手足や臓器など。　&%part の下位関係である &%piece を
を比較する。")
(documentation material JapaneseLanguage "(&%material ?SUBSTANCE ?OBJECT) とは、?OBJECTが、
?SUBSTANCEの一部で構造的に構成されている、という意味である。　この関係は、「構成」、「作られた」、
「形成された」の概念を網羅している。 例えば、プラスチックは私のコンピューターモニターの &%material
である。 &%part とそのサブリレーション、すなわち &%component と &%piece を比較する。")
(documentation contains JapaneseLanguage "２つの分離可能なオブジェクトの空間コンテインメントの
関係。2つのオブジェクトが分離できない場合(例:自動車とその座席の1つ)、&%part の関係を使用する必要が
ある。　(&%contains ?OBJ1 ?OBJ2) とは、&%SelfConnectedObject ?OBJ1 にスペース (すなわち &%Hole)
があることを意味し、少なくとも部分的に?OBJ2で満たされている)。")
(documentation Substance JapaneseLanguage "&%Objectは、すべてのパーツが他のすべての関連するあ
らゆる点で似ている。　より正確には、パーツとして任意のピースのみがある場合、 何かが &%Substance
である - どんなパーツも全体のプロパティに似たプロパティがある。　注：それにも関わらず、&%Substance
は、物理的特性が異る場合がある。　例えば、温度、化学組成、密度などが一部から他の部へ変化する場合が
ある。　例として、水域など。")
(documentation SyntheticSubstance JapaneseLanguage "&%IntentionalProcess の結果である任意の
&%Substance。例えば、&%Humans によって作成される任意の物質など。")
 (documentation NaturalSubstance JapaneseLanguage "&%IntentionalProcess の結果ではない任意の
 &%Substance。例えば、自然に発生する任意の物質。")
(documentation PureSubstance JapaneseLanguage "一定組成がある &%Substances の &%Class。
&%PureSubstance は要素 (&%ElementalSubstance) または要素の複合 (&%CompoundSubstance) のいずれ
かである。 例：食塩（塩化ナトリウム、NaCl）、砂糖（蔗糖、C_ {12} H_ {22} O_ {11}）、水
（H_2O）、鉄（Fe）、銅（Cu）、および酸素 (O_2)。")
(documentation ElementalSubstance JapaneseLanguage "&%PureSubstance の &%Class は、通常の
化学的手段によって2つ以上の &%Substances （または物理的）に分離されない。　これには核反応は含まれ
ない。　&%ElementalSubstances は、1種類の原子のみで構成されている。例：鉄（Fe）、銅（Cu）、
および酸素（O_2）。　&%ElementalSubstances は最も単純な &%PureSubstance である。")
(documentation Metal JapaneseLanguage "&%Metal は &%ElementalSubstance で、熱と電気を伝導し、
光沢があり、多色の光を反射する。そしてそれはシートに打ち込まれたりワイヤーに巻き込まれたりする。
既知の化学元素の約80％ (&%ElementalSubstances) は金属である。")
(documentation Atom JapaneseLanguage "化学反応におけるアイデンティティを保持する非常に小さい
物質の単位。&%AtomicNucleus と　&%AtomicNucleus を囲む &%Electrons で構成される。")
(documentation SubatomicParticle JapaneseLanguage "&%ElementalSubstances のクラスは
&%Atoms より小さく、&%Atoms を構成する。")
 (documentation AtomicNucleus JapaneseLanguage "&%Atom のコア。  &%Proton と &%Neutron
で構成されている。")
(documentation Electron JapaneseLanguage "&%AtomicNucleus を囲む &%SubatomicParticles。
それは負電荷である。")
(documentation Proton JapaneseLanguage "&%AtomicNucleus のコンポーネント。 それは正電荷で
ある。")
(documentation Neutron JapaneseLanguage "&%AtomicNucleus のコンポーネント。それは正電荷でも
負電荷でもない。")
(documentation CompoundSubstance JapaneseLanguage "重量で明確な割合で、2つ以上の要素
(&%ElementalSubstances) を含む &%Substances の  &%Class 。　準備の方法に関係なく、純粋な化合
物の組成は不変である。　化合物は、複数の種類の原子（要素）で構成される。　分子という用語は、多くの
場合、化合物の最小単位に使用され化合物のすべてのプロパティを保持する。例：食卓塩（ナトリウム
塩化物、NaCl）、砂糖（蔗糖、C_ {12} H_ {22} O_ {11}）、および水（H_2O）。")
(documentation Mixture JapaneseLanguage "&%Mixture は二つ以上の &%PureSubstance で、 さま
ざまな割合で結合される - それぞれが固有のプロパティを保持している。　&%Mixture のコンポーネントは、
物理的な手段で分離できる、すなわち化学結合の作成と切断なしである。例：水、牛乳、木材、コンクリート
で完全に溶けた空気と食卓塩。")
(documentation CorpuscularObject JapaneseLanguage "パーツのプロパティが全体で共有されない
&%SelfConnectedObject。")
(documentation Region JapaneseLanguage "地理的な場所。 &%Regions は &%Object の表面、架空の
場所、そして &%GeographicAreas を包含する。 注１：&%Region は、唯一の &%Object の種類で、それ
自体で位置付けできる。注２：&%Region は 一部の &%Regions の理由で &%SelfConnectedObject のサブ
クラスでにはならない。例：群島など、相互に &%connected されてない &%parts。")
(documentation Collection JapaneseLanguage "コレクションには &%Classes などの &%members が
あるが、&%Classes とは異なり時空に位置していて、 &%members は、それによって　&%Collection の
アイデンティティを変更せずに加算および減算できる。　いくつかの例として、ツールキット、サッカー
チーム、および羊の群れなど。")
(documentation member JapaneseLanguage "&%Collections の均一パーツの専門常識の概念の部分。　
例えば、群れの各羊が、群れのメンバーとして関係を持つ、など。")
(documentation subCollection JapaneseLanguage "(&%subCollection ?COLL1 ?COLL2) とは
&%Collection ?COLL1が、&%Collection ?COLL2C2の適切な部分、という意味である。")
(documentation ContentBearingPhysical JapaneseLanguage "コンテンツを表現する任意の &%Object
または &%Process 。 これは、本のように、&%Proposition を含む &%Object をカバーする。　同様に、
&%ManualSignLanguage も &%Proposition を含む。")
(documentation ContentBearingProcess JapaneseLanguage "任意の &%Process。　例えば
&%Proposition を含む可能性のある &%ManualHumanLanguage など。")
(documentation ContentBearingObject JapaneseLanguage "コンテンツを表現する任意の
&%SelfConnectedObject 。　このコンテンツは &%Proposition である可能性がある。例：&%Icon、
&%Word、または &%Phrase と同様、&%ContentBearingObject が &%Sentence か &%Text の時、または
抽象的または物理的なオブジェクトの表現である可能性がある場合。")
(documentation SymbolicString JapaneseLanguage "英数字シーケンス の &%Class 。")
(documentation Character JapaneseLanguage "アルファベットの要素、数字のセットなど。　注：
&%Character は、%Language の一部である場合とそうでない場合がある。 &%Character は、
%SymbolicString のサブクラスである。　これは、&%Character のすべてのインスタンスが
単一の要素で構成される英数字シーケンスだからである。")
(documentation containsInformation JapaneseLanguage "&%represents の下位関係。 この述語は、
&%ContentBearingPhysical を &%Proposition に関し、&%ContentBearingPhysical で表現される。
例として、物理的な小説とその物語の間の関係や、印刷されたスコアとその音楽コンテンツの関係など。")
(documentation Icon JapaneseLanguage "これは &%ContentBearingPhysical のサブクラスで、
&%Language の一部ではなく、それらが表す＆％Objectと何らかの類似点がある。　この &%Class にはシン
ボリックな道路標識、表象芸術作品、写真などが含まれる。")
(documentation MotionPicture JapaneseLanguage "モーションを描写する %ContentBearingObject
（およびオーディオまたはテキストコンポーネントもある場合がある）。 この &%Class は、映画、ビデオ
などをカバーする。")
(documentation LinguisticExpression JapaneseLanguage "これはの &%ContentBearingPhysical の
サブクラスで、言語関連である。　注：この&%Class は、&%Language と &%Languages の要素の両方を含
む。　例：&%Words。")
(documentation Language JapaneseLanguage "思考を表現するサインのシステム。  システムは自然的か、
人工的かのいずれかです。例：文化的アーチファクトとして徐々現れるものか、または人やグループによって
意図的に作成されたもの。")
(documentation AnimalLanguage JapaneseLanguage "&%Human 以外の &%Animal が使用する
&%Language の &%subclass。")
(documentation ArtificialLanguage JapaneseLanguage "&%Human が設計した &%Language の
&%subclass。")
 (documentation ComputerLanguage JapaneseLanguage "&%Language のクラスは、コンピューター用に
 設計され、コンピューターによって解釈される。")
(documentation HumanLanguage JapaneseLanguage "&%Language の &%subclass は &%Humans が
使用する。")
(documentation ConstructedLanguage JapaneseLanguage "&%ConstructedLanguage は 言語コミュ
ニティ内で自然に進化しなかった &%HumanLanguage だが、むしろ一人以上の言語専門家によって、その中核
となる文法と語彙を発明した。多くの場合、自然に進化した言語よりも文法的に規則的な言語を目的として作
り上げた。 この &%Class には、国際コミュニケーションを促進するために作成された、エスペラントのよ
うな言語が含まれている。")
(documentation NaturalLanguage JapaneseLanguage "&%HumanLanguage の &%subclass は、
設計されてはいないが、世代から世代へと進化している。この &%Class にはすべての各国語が含まれる。
例：英語スペイン語、日本語など。　注：このクラスには自然な方言が含まれる。")
(documentation ManualHumanLanguage JapaneseLanguage "&%ManualHumanLanguage は&%HumanLanguage
で、手の形、手の位置、手の動きのように、中程度のジェスチャーや動きなどがる。")
(documentation SpokenHumanLanguage JapaneseLanguage "&%SpokenHumanLanguage は&%HumanLanguage
で、人間の声を媒介とする。文章を通して視覚的に表現することもできる。全てではないが、
&%SpokenHumanLanguage 言語には、成文化された書面形式がある。")
(documentation EnglishLanguage JapaneseLanguage "ゲルマン語は、ロマンス言語からの多くルーツが
組み込まれている。　これは &%UnitedStates 、 &%UnitedKingdom 、　および他の多くの国の公用語であ
る。")
(documentation Word JapaneseLanguage "概念を表す &%Language の用語。")
(documentation Formula JapaneseLanguage "SUO-KIF知識表現言語の構文的な完全論理式。")
(documentation Agent JapaneseLanguage "自分で行動でき、さらに世界に変化をもたらす何か、もしくは
誰か。")
(documentation SentientAgent JapaneseLanguage "&%SentientAgent は &%Perception が可能で、
ある程度の意識を経験する &%Agent である (&%ConsciousnessAttribute を参照)。&%Agent が、比較的
高いレベル（学習、計画、感情を感じる能力があると立証された）で論証できるのであれば、それはまた、
&%CognitiveAgent のインスタンスでもある。　&%DomesticAnimal は、&%SentientAgent だが、&%Animal
の種類に応じて、&%CognitiveAgent である場合とそうでない場合がある。")
(documentation CognitiveAgent JapaneseLanguage "&%CognitiveAgent は、&%Agent で、論証したり、
熟考したり、計画を立てたり、感情を体験するする能力がある。 &%Human は &%CognitiveAgent のサブク
ラスだが、&%Human のインスタンスでもある &%CognitiveAgent のインスタンスの可能性がある。 例えば、
&%Primate、イルカ、クジラ、および一部の地球外物(存在する場合)は &%CognitiveAgent と見なされるか
もしれない。")
(documentation LegalAgent JapaneseLanguage "&%LegalAgent は、特定の目的のために法的人物
として行動し、扱われることが法律で認められている &%Agent である。訴訟の当事者、財産の所有、契約の
締結などがその例である。 通常、&%LegalAgent は 成人 &%Human または何らかのタイプの &%Organization
のいずれかである。 所定の時間と場所における一般的な法制度に応じて、 他の &%CognitiveAgent と同様
、&%Humanは一般的に通常 &%LegalAgents に合意されたもの以外の追加の法的権利と義務を持つことになる。
次のウィキペディアの記述を参照：
<ahref=http://en.wikipedia.org/wiki/Juristic_person>Juristicperson</a> 。")
(documentation leader JapaneseLanguage "(&%leader ?INSTITUTION ?PERSON)
とは、 ?INSTITUTION のリーダーが ?PERSON という意味である。")
(documentation Process JapaneseLanguage "クラスの物事で、発生したり一時的なパーツまたはス
テージがあるもの。 例として、フットボールの試合やレースなどの拡張イベント、&%Pursuing や &%Reading
のようなアクション、生物学的プロセスなど。正式な定義: 時間内に発生するが、&%Object ではない任意の
もの。　注：&%Process は、フットボールの試合での選手のように、その「内側」参加者である &%Object
を持っているかもしれない。 4Dオントロジーでは、&%Process は時間軸にほぼ垂直な時間的な段階に分割す
ると考えられている空間的な範囲である。")
(documentation DualObjectProcess JapaneseLanguage "任意の &%Process で、2つの非同一の
&%patient を要する。")
(documentation SingleAgentProcess JapaneseLanguage "&%SingleAgentProcess
はすべての &%Process の &%Class で、それを発生させるには、&%agent が 1 つだけ必要である。")
(documentation Abstract JapaneseLanguage "物理的媒体における任意の特性/資質の特定の実施形態と
区別されるプロパティまたは品質。
抽象のインスタンスは、セットや関係など、数学的なオブジェクトと同じ意味で存在すると言える。　しかし、
それらは、いくつかの物理的なエンコーディングや実施形態なしで特定の場所と時間に存在することはでき
ない。")
(documentation Quantity JapaneseLanguage "何かの数や量の任意の仕様。 それに応じて、 二つの
&%Quantity のサブクラスがある：&%Number (数)と &%PhysicalQuantity (量)。")
(documentation Attribute JapaneseLanguage "サブクラスに再び取り入れることができないか、または
選択できない品質。")
(documentation property JapaneseLanguage "この &%Predicate は、E と A のインスタンスの間に
保持される。(&%property ?ENTITY ?ATTR) とは、?ENTITY が &%Attribute ?ATTR を有する、という
意味である。")
(documentation attribute JapaneseLanguage "(&%attribute ?OBJECT ?PROPERTY) とは、 ?PROPERTY
が、?OBJECTの &%Attribute という意味である。  例：(&%attribute &%MyLittleRedWagon &%Red)。")
(documentation manner JapaneseLanguage "(&%manner ?PROCESS ?MANNER) とは、&%Process
?PROCESSPPは &%Attribute ?MANNER によって認定されている、という意味である。 &%Processes の
&%Attributes は通常、副詞によって示され、風速、ダンスのスタイル、スポーツ競技の強度などのような
が含まれる。")
(documentation ExtensionFn JapaneseLanguage "メンバーシップの条件が &%Attribute である &%Class
に &%Attribute をマップする &%UnaryFunction。")
(documentation AttrFn JapaneseLanguage "指定されたクラスと指定された属性の場合、属性を持つオブ
ジェクトのクラスのサブクラスを返す。")
 (documentation InternalAttribute JapaneseLanguage "&%Entity の内部プロパティである &%Entity
 の任意の &%Attribute 。 例：その形状、その色、その脆弱性など。")
(documentation PhysicalAttribute JapaneseLanguage "オブジェクトの物理プロパティによって与えら
れる &%InternalAttribute 。")
(documentation RelationalAttribute JapaneseLanguage "&%Entity が関係によって持つ 任意の
&%Attribute で、それは別の &%Entity または &%Entity のセットに負担する。 例：&%SocialRoles と
&%PositionalAttributes。")
(documentation Number JapaneseLanguage "ある種の物がいくつあるか、どれだけあるかの測定。
&%Numbers は &%RealNumber, &%ComplexNumber、および &%ImaginaryNumber にサブクラス化される。")
(documentation lessThan JapaneseLanguage "(&%lessThan ?NUMBER1 ?NUMBER2) は、&%Quantity
?NUMBER1 が &%Quantity ?NUMBER2 より小さい場合に当てはまる。")
(documentation greaterThan JapaneseLanguage "(&%greaterThan ?NUMBER1 ?NUMBER2) は、&%Quantity
?NUMBER1 が &%Quantity ?NUMBER2よりも大きい場合に当てはまる。")
(documentation lessThanOrEqualTo JapaneseLanguage "(&%lessThanOrEqualTo ?NUMBER1 ?NUMBER2)
は、&%Quantity ?NUMBER1が &%Quantity ?NUMBER2以下の場合に当てはまる。")
(documentation greaterThanOrEqualTo JapaneseLanguage "(&%greaterThanOrEqualTo ?NUMBER1
?NUMBER2) は、&%Quantity ?NUMBER1が &%Quantity ?NUMBER2以上の場合に当てはまる。")
(documentation RealNumber JapaneseLanguage "（無限の可能性がある）10進数として表現できる任意の
&%Number。例：数直線の位置を持つ任意の &%Number。")
(documentation ImaginaryNumber JapaneseLanguage "&%RealNumber に -1の平方根を乗算した結果の
任意の &%RealNumber。")
 (documentation RationalNumber JapaneseLanguage "2つのINTを分割した製品である任意の
 &%RealNumber。")
(documentation IrrationalNumber JapaneseLanguage "&%RationalNumber でもない任意の
&%RealNumber 。")
(documentation NonnegativeRealNumber JapaneseLanguage "ゼロ 以上の &%RealNumber 。")
(documentation PositiveRealNumber JapaneseLanguage "ゼロより大きい &%RealNumber 。")
(documentation NegativeRealNumber JapaneseLanguage "ゼロ未満の &%RealNumber 。")
(documentation Integer JapaneseLanguage "負または非負の整数。")
(documentation EvenInteger JapaneseLanguage "2 で均等に割り切れる &%Integer 。")
(documentation OddInteger JapaneseLanguage "2 で均等に割り切れない &%Integer 。")
(documentation PrimeNumber JapaneseLanguage "それ自体と 1 によってのみ均等に割り切れる
&%Integer 。")
(documentation NonnegativeInteger JapaneseLanguage "ゼロ 以上の大きい &%Integer 。")
(documentation NegativeInteger JapaneseLanguage "ゼロ未満の &%Integer 。")
(documentation PositiveInteger JapaneseLanguage "ゼロより大きい &%Integer 。")
(documentation BinaryNumber JapaneseLanguage "ベース 2 を持つ記数法からの要素。
すべての &%BinaryNumber は、数字 1 と 0 のシーケンスとして表される。")
(documentation ComplexNumber JapaneseLanguage "&%Number の形式が x + yiで、x と yが
&%RealNumbers であり、i が -1 の平方根。")
(documentation PhysicalQuantity JapaneseLanguage "&%PhysicalQuantity は、「地球の直径」
(一定の長さ)や、「荷を積んだ変形可能なソリッドの応力」(3つの空間座標の関数であるストレスの尺度) の
ように、モデル化された世界の定量化可能な側面の尺度である。 すべての &%PhysicalQuantity は
&%ConstantQuantity または &%FunctionQuantity のいずれかです。 &%ConstantQuantity のインスタン
スは UOM に依存し、それに対し、&%FunctionQuantity のインスタンスは、&%ConstantQuantity のイン
スタンスを &%ConstantQuantity の他のインスタンスにマップする &%Functions である。（例：
&%TimeDependentQuantityは &%FunctionQuantityQ である)。　&%PhysicalQuantity の名前と定義は
物理学から借りているが、&%PhysicalQuantity は材料である必要はない。　長さ、時間、速度などの寸法の
ほかに、通貨などの非物理的な寸法も可能である。　それに応じて、金額は、&%PhysicalQuantity のインス
タンスになる。 &%PhysicalQuantity は、前者が寸法測定に関連付けられているという事実によって純粋
な &%Number と区別される。")
(documentation ConstantQuantity JapaneseLanguage "&%ConstantQuantity は、定数値を有する
&%PhysicalQuantity である。例えば、3 &%Meters と 5 &%HourDurations 。 すべての
&%ConstantQuantity の大きさ(&%MagnitudeFn 参照)は &%RealNumber です。   &%ConstantQuantity
は、後者の各インスタンスが別の &%PhysicalQuantity へのマッピングを介して形成されることにおいて、
&%PhysicalQuantity と区別される。 &%ConstantQuantity の各インスタンスは %BinaryFunction
&%MeasureFn で表され、&%Number と &%UnitOfMeasure を引数として受け取る。　例えば、3 &%Meters
は (&%MeasureFn 3 &%Meter) として表される。 &%lessThan は &%RelationExtendedToQuantity で
あり、&%lessThan は &%RealNumber の上で定義されるため、&%ConstantQuantity のインスタンスは
&%lessThan 関係を持つ部分的な順序 (&%TotalOrderingRelation を参照) を形成する。 &%lessThan
の関係は、&%ConstantQuantity の一部のサブクラスの要素 (長さの数量など) が &%ConstantQuantity の
他のサブクラスの要素 (質量量など) に匹敵しないため、クラス &%ConstantQuantity 上の合計順序
(&%TotalOrderingRelation を参照) ではない。")
(documentation TimeMeasure JapaneseLanguage "ユニバーサル タイムライン (&%TimePosition のイン
スタンス) に沿った一時的な期間のクラス (&%TimeDuration のインスタンス) と &%TimePoint と
&%TimeInterval 。")
(documentation TimeDuration JapaneseLanguage "ユニバーサル タイムラインに関する有無にかかわ
らない、時間の長さの任意の尺度。")
(documentation TimePosition JapaneseLanguage "&%NegativeInfinity から &%PositiveInfinity
までのユニバーサルタイムラインに沿った &%TimePoint または &%TimeInterval 。")
(documentation TimeInterval JapaneseLanguage "時間の間隔。
注 1： &%TimeInterval には、ユニバーサル タイムライン上の範囲と場所の両方がある。
注 2： &%TimeInterval にはギャップがない。
例： このクラスには、凸時間間隔のみが含まれる。")
(documentation TimePoint JapaneseLanguage "ユニバーサルタイムライン上の拡張のないポイント。
&%Process が発生する &%TimePoint は、さまざまな精度と近似で知ることができるが、概念的には
&%TimePoint はポイントに似ており、インターバルのようなものではない。 つまり、&%TimePoint がどれ
くらい長く続くかについて話すのは意味がない。")
(documentation FunctionQuantity JapaneseLanguage "&%FunctionQuantity は、&%ConstantQuantity
の 1 つ以上のインスタンスから &%ConstantQuantity の別のインスタンスにマップする &%Function に
よって返される &%PhysicalQuantity である。　例：パーティクルの速度は、時間の値
(&%ConstantQuantity のインスタンス) から距離の値 (これも &%ConstantQuantity のインスタンス) に
関連する &%FunctionQuantity によって表される。　注：&%FunctionQuantity に対応する &%Function
の範囲のすべての要素は、&%FunctionQuantity 自体と同じ物理的寸法である。")
(documentation UnaryConstantFunctionQuantity JapaneseLanguage "&%FunctionQuantity の
&%subclass のインスタンスは、&%Class &%ConstantQuantity の 1 つのインスタンスから &%Class
&%ConstantQuantity の別のインスタンスにマップする &%UnaryFunctions によって返される。")
(documentation TimeDependentQuantity JapaneseLanguage "連続時間の
&%UnaryConstantFunctionQuantity。この &%Class のすべてのインスタンスは、時間の数量をマップする
&%Function によって返される。 温度などの別の &%ConstantQuantity。例：「エンパイアステートビルの
最上部の温度」は、 &%TimeDependentQuantity、その値が時間に依存するためである。")
(documentation SetOrClass JapaneseLanguage "&%Sets の &%SetOrClass と &%Classes。　例：
&%elements または &%instances がある &%Abstract の任意のインスタンス。")
(documentation Class JapaneseLanguage "&%Classes は3つの重要な点で &%Set と異なる。まず、
&%Class は、拡張であるとは見なされない。つまり、明確な &%Classe はまったく同じインスタンスを持つ
可能性がある。第二に、&%Classe は通常、関連する「条件」を持っていて、それは、&%Classe のインス
タンスを決定する。したがって、例えば、条件「ヒト」は &%Human の &%Class を決定する。注意: 一部の
&%Class は、自分自身の状態 (例えば、&%Abstract の &%Class は &%Abstract である) を満たす、
したがって、それ自体のインスタンスである可能性がある。第三に、クラスのインスタンスは、クラス内で1回
だけ発生する可能性がある。　例：クラスは、重複するインスタンスを含めることはできない。")
(documentation Set JapaneseLanguage "拡張性と、セット理論のいくつかの選択によって指定された他の
制約を満たす &%SetOrClass 。 &%Set は2つの重要な点で &%Class と異なる。まず、&%Set は拡張体で
あり、同じ &%element を持つ2つの &%Set は同一である。次に、&%Set はオブジェクトの任意のストックに
することができる。つまり、&%Set がメンバーシップを決定する関連付けられた条件を持つ必要はあない。
注：&%Set は一意のセット、つまり一意のセットであるとは見なされない。　例：&%Set の &%element は、
&%Set で複数回発生する可能性がある。")
(documentation Relation JapaneseLanguage "関係の &%Class。&%Relation には、&%Predicate、
&%Function、と &%List の3種類がある。 %Predicate と &%Function の両方が、順序付けされた n タプ
ルのセットを示す。これら2つの &%Class の違いは、&%Predicate カバー式形成演算子、&%Function カ
バー用語形成演算子である。一方、&%List は特定の順序付けされた n タプルである。")
(documentation SingleValuedRelation JapaneseLanguage "&%Relation は、
&%SingleValuedRelation で、最後の引数位置を除くすべての引数位置に値を割り当てるだけで、最後の
引数位置に対して最も 1 つの割り当てを決定する場合に備えてる。 注：すべての &%SingleValuedRelation
が &%TotalValuedRelation ではない。")
(documentation TotalValuedRelation JapaneseLanguage "&%Relation は、&%TotalValuedRelation
で、最後の引数位置を除くすべての引数位置に値を割り当て上げた &%Relation の最後の引数位置に対する
割り当てが存在する場合に備えている。　注：&%Relation を &%TotalValuedRelation と &%SingleValuedRelation
の両方に宣言すると、それが完全な関数であることを意味する。")
(documentation PartialValuedRelation JapaneseLanguage "&%Relation は それが
&%TotalValuedRelation でない場合に備え、&%PartialValuedRelation
である。つまり、最後の引数を除くすべての引数の位置に値を割り当てる場合に備えて、必ずしも最後の引数
位置に値の割り当てがあるとは限らない。&%Relation が &%PartialValuedRelation と
&%SingleValuedRelation の両方である場合、それは部分的な関数である。")
(documentation BinaryRelation JapaneseLanguage "&%BinaryRelation は relation で、 それは
ペアのもののみ当てはまる。 &%BinaryRelation は、フレームシステムのスロットとして表される。")
(documentation ReflexiveRelation JapaneseLanguage "&%Relation ?REL は、すべての ?INST に対し
(?REL ?INST ?INST) の場合のみ再帰的である。")
(documentation IrreflexiveRelation JapaneseLanguage "&%Relation ?REL は、(?REL ?INST ?INST)
に?INSTの値がない場合のみ非再帰的である。")
(documentation SymmetricRelation JapaneseLanguage "&%BinaryRelation ?REL は、すべての ?INST1
および ?INST2 に対して (?REL ?INST1 ?INST2) が (?REL ?INST2 ?INST1) の場合にのみ対称である。")
(documentation AsymmetricRelation JapaneseLanguage "%BinaryRelation は %AntisymmetricRelation
と &%IrreflexiveRelation の両方である場合のみ非対称でる。")
(documentation AntisymmetricRelation JapaneseLanguage "&%BinaryRelation ?REL は、明確な
?INST1 および ?INST2 の場合は AR であり、(?REL ?INST1 ?INST2) は (?REL ?INST2 ?INST1) を意味
しない。つまり、すべての ?INST1 および ?INST2 に対して (?REL ?INST1 ?INST2) および
(?REL ?INST2 ?INST1) は、?INST1 と ?INST2 が同一であることを意味する。　注：
&%AntisymmetricRelation が &%ReflexiveRelation になる可能性がある。")
(documentation TrichotomizingRelation JapaneseLanguage "明確な個々で構成されるすべての
順序付きペアが ?REL の要素である場合に備え、&%BinaryRelation ?REL は、&%TrichotomizingRelation
である。")
(documentation TransitiveRelation JapaneseLanguage "&%BinaryRelation ?REL は、すべての
?INST1, ?INST2, および ?INST3 に対して (?REL ?INST1 ?INST2) および (?REL ?INST2 ?INST3) が
(?REL ?INST1 ?INST3) を意味する場合、推移的である。")
(documentation IntransitiveRelation JapaneseLanguage "&%BinaryRelation ?REL は、
(?REL ?INST1 ?INST2) および (?REL ?INST2 ?INST3) がすべての ?INST1、?INST2、および ?INST3
に対して (?REL ?INST1 ?INST3) を意味しない場合にのみ非推移的である。")
(documentation PartialOrderingRelation JapaneseLanguage "&%BinaryRelation は、
&%ReflexiveRelation、&%AntisymmetricRelation、および &%TransitiveRelation の場合の部分的な
順序付けである。")
(documentation TotalOrderingRelation JapaneseLanguage  "&%BinaryRelation は
&%PartialOrderingRelation と &%TrichotomizingRelation の場合の &%TotalOrderingRelation で
ある。")
(documentation EquivalenceRelation JapaneseLanguage "&%BinaryRelation は、&%ReflexiveRelation、
&%SymmetricRelation、および &%TransitiveRelation の場合の等価関係です。")
(documentation CaseRole JapaneseLanguage "&%Predicates の &%Class は、&%Process の空間的に
区別されたパーツに関連する。&%CaseRoles は、例えば、作用の &%agent 、&%patient または
&%destination、燃焼プロセスにおける可燃性物質、または雨に落ちる水を含む。")
(documentation involvedInEvent JapaneseLanguage "(involvedInEvent ?EVENT ?THING) とは、
&%Process ?EVENTでは、、&%Entity ?THING は &%CaseRole の役をする、という意味である。")
(documentation agent JapaneseLanguage "(&%agent ?PROCESS ?AGENT) とは、?AGENT が自発的な意図
の有無にかかわらず、&%Process ?PROCESS のアニメーションまたは無生物のいずれかのアクティブな決定
要因であることを意味する。例：イブは次の命題の &%agentag である: イブがリンゴを噛む。")
(documentation destination JapaneseLanguage "(destination ?PROCESS ?GOAL) とは、?GOAL が
Process ?PROCESS のターゲットまたは目標であることを意味する。　例：ダンベリーは次の命題の目的地に
なる: ボブはダンベリーに行った。注：これは非常に一般的な &%CaseRole であり、特に「受取人」と「
受益者」の概念をカバーしている。 したがって、ジョンは次の命題の &%destination であると考えられる:
トムはジョンに本をあげた。")
(documentation experiencer JapaneseLanguage "(&%experiencer ?PROCESS ?AGENT) とは、?AGENT
&%Process ?PROCESS を経験することを意味する。　例：ヨージョは、次の命題で見るの &%experiencer
である: ヨジョは魚を見る。&%experiencer は &%agent とは異なり、引数間の因果関係を伴わない。")
(documentation instrument JapaneseLanguage "(instrument ?EVENT ?TOOL) とは、エージェントが
?EVENT を持ち込む場合にエージェントによって使用され、?TOOL が ?EVENT によって変更されないことを
意味する。例：キーは次の命題のインである: キーがドアを開けた。　注：&%instrument と &%resource
は、同じ順序のペアでは満たすことができない。")
 (documentation origin JapaneseLanguage "(&%origin ?PROCESS ?SOURCE) とは、?SOURCE が
 ?Process の始まりを示すという意味である。　注：この関係は、?SOURCE がプロセスの開始時に存在する
 ことを意味するが、プロセス全体に参加する必要はない。　例：潜水艦は、次の命題の &%origin である:
 ミサイルが潜水艦から発射された。")
(documentation patient JapaneseLanguage "(&%patient ?PROCESS ?ENTITY) とは、?ENTITYは、
移動、言った、経験豊富な、などが ?PROCESS に参加していることを意味する。　例：「猫はカナリアを飲み
込んだ」と「ビリーはビールが好き」という文章の直接的なオブジェクトは、&%patient の例である。
注：&%Process の &%patient は、&%Process の結果として構造変化を受ける場合とそうでない場合がある。
&%patient の &%CaseRole は、&%Process のオブジェクトを可能な限り広く指定する場合に使用される。")
(documentation resource JapaneseLanguage "(&%resource ?PROCESS ?RESOURCE) とは、?RESOURCE
が PR の開始時に存在し、?PROCESS によって使用され、その結果として ?PROCESSによって変更されたこと
を意味する。　例：石鹸は、次の命題の &%resource である: 銃は石鹸から彫り出された。  注：
&%resource は、&%patient のもう 1 つのサブリレーションである &%instrument とは異なり、内部プロ
パティまたは物理プロパティが &%Process によって何らかの方法で変更される。")
(documentation resourceExhausted JapaneseLanguage "(&%resourceExhausted ?PROCESS ?RESOURCE)
とは、?RESOURCE が ?PROCESS の開始時に存在し、?PROCESS によって使用され、その結果、?PROCESS に
よって完全に使い古されたことを意味する。　例：燃料は、次の命題で使用される &%resourceExhausted で
ある: 飛行機は燃料を使い果たし、海に不時着した。")
(documentation result JapaneseLanguage "(result ?ACTION ?OUTPUT) とは、?OUTPUTO が ?ACTION
のプロダクトであることを意味する。　例：家は次の命題の &%result である: エリックは家を建てた。")
(documentation InheritableRelation JapaneseLanguage "&%Relations のクラスは、サブ
&%Relations を介してクラス階層内でプロパティを下方に継承できる 。")
(documentation ProbabilityRelation JapaneseLanguage "&%Relations の &%Class は、イベント
または状況の確率の評価を可能にする。")
(documentation ProbabilityFn JapaneseLanguage "基本的な &%ProbabilityRelation の一つは、
&%ProbabilityFn は、事態の先行確率を述えるために使用される。((&%ProbabilityFn ?FORMULA) は
?FORMULAの先行確率を示する。")
(documentation conditionalProbability JapaneseLanguage "基本的な &%ProbabilityRelation。
&%conditionalProbability の 1 つは、条件付き確率の数値を指定するために使用される。
(&%conditionalProbability ?FORMULA1 ?FORMULA2 ?NUMBER)とは、?FORMULA1が正しいことを考えると、
?FORMULAが正しい確率が ?NUMBER であることを意味する。")
(documentation increasesLikelihood JapaneseLanguage "基本的な &%ProbabilityRelation。
(&%increasesLikelihood ?FORMULA1 ?FORMULA2) とは、?FORMULA1 が正しい場合、?FORMULA2 が正しい
可能性が高いことを意味する。")
(documentation decreasesLikelihood JapaneseLanguage "基本的な &%ProbabilityRelation。
(&%decreasesLikelihood ?FORMULA1 ?FORMULA2)とは、?FORMULA1が正しい場合、?FORMULA2が正しい可
能性が高いことを意味する。")
 (documentation independentProbability JapaneseLanguage "基本的な &%ProbabilityRelation。
 (&%independentProbability ?FORMULA1 ?FORMULA2)とは、?FORMULA1 と ?FORMULA2 正しくないという
 確率が独立していることを意味する。")
(documentation SpatialRelation JapaneseLanguage " &%Relation の &%Class は、広い意味で空間的
である。この &%Class には、単なる関係とトポロジ的な関係が含まれる。")
(documentation TemporalRelation JapaneseLanguage "時間的な &%Relation の &%Class この
&%Class は、間隔の(時間的な)トポロジ、(時間的)スケマタ、および(時間的)拡張の概念を含む。")
(documentation IntentionalRelation JapaneseLanguage "&%Agent と1つ以上の &%Entities の間の
&%Agent の &%Class は &%Agent が &%Entity の認識を持っていることを &%Relation が要求する。")
(documentation prefers JapaneseLanguage "(&%prefers ?AGENT ?FORMULA1 ?FORMULA2) とは、
&%CognitiveAgent ?AGENT が ?FORMULA2よりも?FORMULA1 によって全てが同等と表現される状態を好むこ
とを意味する。")
(documentation PropositionalAttitude JapaneseLanguage "&%Agent が &%Proposition の認識を
持っている &%IntentionalRelations IR の &%Class。")
(documentation ObjectAttitude JapaneseLanguage "&%Agent が &%Physical のインスタンスを認識
している &%IntentionalRelation の &%Class。")
(documentation inScopeOfInterest JapaneseLanguage "非常に一般的な &%Predicate。
(&%inScopeOfInterest ?AGENT ?ENTITY) とは、?ENTITY が ?AGENT の関心の範囲内であることを意味
する。注：示される関心は、正または負のどちらか、すなわち ?AGENT は ?ENTITY を回避または促進する
ことに関心を持つことができる。")
(documentation needs JapaneseLanguage "(&%needs ?AGENT ?OBJECT) とは、?AGENT の継続的な存在
のために ?OBJECT が物理的に必要であることを意味する。")
(documentation wants JapaneseLanguage "(&%wants ?AGENT ?OBJECT) とは、?OBJECT が ?AGENT に
よって望ましいことを意味する。　つまり、?AGENT は、OBJECT がその目標の1つを満たすと信じている。
注：エージェントが望むものがエージェントによって既に所有されていないという結果はない。")
(documentation desires JapaneseLanguage "(&%desires ?AGENT ?FORMULA) とは、?AGENT が
?FORMULA によって表現された事態の状態をもたらすことを望んでいることを意味する。　注１：エージェント
が望むものが既に正しくないという結果はない。　注2：また、&%desires は前者が &%PropositionalAttitude
であるのに対し、&%wants は &%ObjectAttitude であるという点でのみ &%wants と区別される。")
(documentation considers JapaneseLanguage "(&%considers ?AGENT ?FORMULA) とは、AGENT が
?FORMULAによって表明された命題の真実について考慮または疑問に思っていることを意味する。")
(documentation believes JapaneseLanguage "信念の認識的述語。(&%believes ?AGENT ?FORMULA)
とは、AGENT が?FORMULA によって表される命題を信じていることを意味する。")
(documentation knows JapaneseLanguage "知ることの認識的述語。 (&%knows ?AGENT ?FORMULA) とは、
?AGENT が ?FORMULA によって表される命題を知っていることを意味する。  &%knows は意識を伴うので、
この &%Predicate は暗黙の知識や潜在意識や無意識の知識を表現するために使用することはできない。")
(documentation TernaryRelation JapaneseLanguage "&%TernaryRelations は ３つの項目に関連する。
２つの &%TernaryRelation の　&%subclass は &%TernaryPredicate と &%BinaryFunction である。")
(documentation QuaternaryRelation JapaneseLanguage "&%QuaternaryRelation は4つの項目に関連
している。２つの &%QuaternaryRelation の &%subclass は &%QuaternaryPredicate と
&%TernaryFunctionTF である。")
(documentation QuintaryRelation JapaneseLanguage "&%QuaternaryRelation は5つの項目に関連
している。２つの &%QuaternaryRelation の &%subclass は &%QuaternaryPredicate と
&%QuaternaryFunction である。")
(documentation List JapaneseLanguage "すべての &%List は、特定の順序付けされた項目の n タプル
である。一般的に、&%List は &%ListFn &%Function によって作成され、任意の数の項目を引数として受け
取り、同じ順序で項目を持つ &%List を返す。他の &%List を含むものはすべて、&%List 内の項目であって
もよい。注：&%List は拡張子であり、同じ順序で同じ項目を持つ２つのリストが同じである場合もある。　
注2：&%List には項目が含まれていない可能性がある。その場合、&%List は &%NullList である。")
(documentation UniqueList JapaneseLanguage "項目が複数回表示されていない &%List、すなわち
(&%ListOrderFn ?LIST ?NUMBER1) と (&%ListOrderFn ?LIST ?NUMBER2) が同じ値を返すような、
明確な番号 ?NUMBER1と?NUMBER2がない &%List 。")
 (documentation NullList JapaneseLanguage "項目のない &%List 。&%NullList の一意性は、
 &%Lists の拡張性、すなわち、同じ順序で同じ項目を持つ２つの &%List が同じであるという事実。")
(documentation ListFn JapaneseLanguage "任意の数の引数を受け取り、それらの引数を含む &%List を
まったく同じ順序で返す &%Function。")
(documentation ListOrderFn JapaneseLanguage "(&%ListOrderFn ?LIST ?NUMBER) は、&%List ?LIST
の?NUMBER の位置にある項目を示す。例：(&%ListFn &%Monday &%Tuesday &%Wednesday) 2) は、
&%Tuesday の値を返す。")
(documentation ListLengthFn JapaneseLanguage "&%Function は、 &%List を唯一の引数として受け
取り、&%List 内の項目数を返す。例：(&%ListLengthFn (&%ListFn &%Monday &%Tuesday &%Wednesday))
は３の値を返す。")
(documentation ListConcatenateFn JapaneseLanguage "&%Function は、引数として指定された２つの
&%List の連結を返す 例：(&%ListConcatenateFn (&%ListFn &%Monday &%Tuesday) (&%ListFn &%Wednesday
&%Thursday)) の値は (&%ListFn &%Monday &%Tuesday &%Wednesday &%Thursday) となる。")
(documentation inList JapaneseLanguage "&%Lists の &%element と &%instance のアナログ。
(&%inList ?OBJ ?LIST)とは、?OBJ が &%List ?LIST 内であることを意味する。例：
(&%inList &%Tuesday (&%ListFn &%Monday &%Tuesday &%Wednesday)) は正しい。")
(documentation subList JapaneseLanguage "(&%subList ?LIST1 ?LIST2) とは、?LIST1 が ?LIST2
のサブリスト、すなわち ?LIST2 であることを意味する。?LIST1 のすべての要素は ?LIST2 の要素であり、
両方の &%List に共通する要素は両方の &%List で同じ順序である。両方のリストに共通で、一方のリストで
連続している要素も、もう一方のリストで連続している必要がある。(したがって- 10より小さい素数の
リスト[1 2 3 5 7]は、10[1 2 3 5 6 7 8 9]より小さい自然数のサブリストではない。")
(documentation initialList JapaneseLanguage "(&%initialList ?LIST1 ?LIST2) とは、?LIST1は
?LIST2 の sL であり、(&%ListOrderFn ?LIST1 ?NUMBER) は ?NUMBER の値
(&%ListOrderFn ?LIST1 ?NUMBER) が定義されているすべての値に対して (&%ListOrderFn ?LIST2 ?NUMBER)
と同じ値を返す。")
(documentation identicalListItems JapaneseLanguage "(&%identicalListItems ?LIST1 ?LIST2)
とは、?LIST1 と ?LIST2 がそれぞれのリストにまったく同じ項目を持つことを意味する。?LIST1と ?LIST2
はまったく同じアイテムを共有する必要がるが、これらの項目の順序が異なる場合がある。")
 (documentation Predicate JapaneseLanguage "&%Predicate とは、&%Relation の各タプルが有限で
 順序付けされたオブジェクトのシーケンスである文形成 &%Relation である。　特定のタプルが
 '(*述語* arg_1 arg_2 .. arg_n)による &%Predicate の要素であるという事実。 arg_n)'は、arg_i が
 関連するオブジェクトである。&%BinaryPredicates の場合、事実は 'arg_1 は *述語* arg_2' または
 'arg_1 の *述語* は arg_2' と読むことができる。")
(documentation Function JapaneseLanguage "&%Function とは、&%Relation で、nタプルの引数から
範囲にマップし、この nタプルを最大１つの範囲要素に関連付ける用語形成である。注：範囲は &%SetOrClass
であり、範囲の各要素は &%SetOrClass のインスタンスである。")
(documentation UnaryFunction JapaneseLanguage "&%Functions の&%Class は 単一の引数が必要
である。")
(documentation OneToOneFunction JapaneseLanguage "&%UnaryFunctions は1対1である。関数 F は、
F のドメイン内のすべての X の場合に備えて 1 対 1 で、X が Y と同一でない場合、F(X) は F(Y) と
同一ではない。")
(documentation SequenceFunction JapaneseLanguage "&%OneToOneFunctions の &%Class範囲は
&%PositiveInteger のサブクラスである。")
(documentation BinaryFunction JapaneseLanguage "&%Function の &%Class は、２つの引数を必要と
する 。")
 (documentation AssociativeFunction JapaneseLanguage "ブラケットが?FUNCTIONによって返される
 値に影響を与える場合、&%BinaryFunction は関連される。　より正確には、&%Function ?FUNCTION は
 念のため、(?FUNCTION ?INST1 (?FUNCTION ?INST2 ?INST3)) が (?FUNCTION (?FUNCTION ?INST1
 ?INST2) ?INST3) と等しい場合に備え、すべての?INST1、?INST2、および?INST3が関連的である。")
(documentation CommutativeFunction JapaneseLanguage "&%BinaryFunction は、関数の引数の順序が
関数によって返される値に影響を与える場合に可換になる。より正確には、関数 ?FUNCTION は、すべての
?INST1 および ?INST2 に対して(?FUNCTION ?INST1 ?INST2) が (?FUNCTION ?INST2 ?INST1) に等しい
場合に可換する。")
(documentation TernaryFunction JapaneseLanguage "&%Function の &%Class は、正確に３つの引数を
必要とする 。")
(documentation QuaternaryFunction JapaneseLanguage "&%Function の &%Class は、正確に4つの
引数を必要とする。")
(documentation ContinuousFunction JapaneseLanguage "&%Functions は連続している。この概念は、
限界の表現が考案されるまで、プリミティブと見なされる。")
 (documentation BinaryPredicate JapaneseLanguage "&%Predicate は2つの項目に関連する- その
 価数は2である。")
(documentation TernaryPredicate JapaneseLanguage "&%Predicates の &%Class は、正確に3つの
引数を必要とする。")
(documentation QuaternaryPredicate JapaneseLanguage "&%Predicates の &%Class は、正確に4つの
引数を必要とする。")
(documentation QuintaryPredicate JapaneseLanguage "&%Predicates の &%Class は、正確に5つの
引数を必要とする。")
(documentation VariableArityRelation JapaneseLanguage "&%Relations の &%Class は、一定数の
引数を持たない。")
(documentation RelationExtendedToQuantities JapaneseLanguage "&%RelationExtendedToQuantity
は &%Relation であり、&%RealNumber である一連の引数に対して正しい場合、それはまたいくつかの測定
単位でのそれらの大きさの &%ConstantQuantity の引数のシーケンスの場合にも当てはまる。 例：
&%lessThan 関係は数量に拡張される。つまり、数量の全てのペア Q1 および Q2 に対して、 ?NUMBER1、
?NUMBER2、および ?UNIT?、?QUANTITY1 が　(&%MeasureFn ?NUMBER1 ?UNIT), ?QUANTITY2 が
(&%MeasureFn ?NUMBER2 ?UNIT), および (&%lessThan ?NUMBER1 ?NUMBER2) のみの場合、
(&%lessThan ?QUANTITY1 ?QUANTITY2) であり、?QUANTITY1 と ?QUANTITY2 にあるすべての単位?UNITは
測定できる。 注：&%RelationExtendedToQuantities が拡張される場合は、 &%RealNumber から
&%ConstantQuantity のインスタンスに対して、&%ConstantQuantity は同じ物理的寸法に沿って測定する
必要がある。")
(documentation LogicalOperator JapaneseLanguage "この &%Class は、すべての論理演算子
(viz.'と'or''、'ではない''、'=>'、および '<=>') で構成される。")
(documentation Proposition JapaneseLanguage "&%Proposition は、完全な思考またはそのような
考えのセットを表現する &%Abstract エンティティである。例として、数式 '(インスタンスヨージョキャット)'
は、 &%Proposition を表し、ヨージョという名前のエンティティが猫の &%Class の要素である 。　注：
提案は、個々の &%Language の文章により表現されたコンテンツに限定されない。 それらは理論、書籍、
さらには図書館全体によって表現される内容を包含するかもしれない。&%Proposition と　
&%ContentBearingObject を区別することが重要である。&%Proposition は、猫がマット上にあるなど、
情報の一部だが、&%ContentBearingObject はこの情報を表す &%Object である。　&%Proposition は、
文字列、サウンド、アイコンなど、複数の表現を持つ抽象化である。　例：猫がマットの上にある
&%Proposition が ここでは、モニターもしくは紙に印刷されて、グラフィカル文字の文字列として表示され
るが、音、または非ラテン系のアルファベットまたは暗号形式によるシーケンスで表すことができる。")
(documentation closedOn JapaneseLanguage "&%BinaryFunction は、&%SetOrClass のすべてのインス
タンスに対して定義され、その値が常に &%SetOrClass のインスタンスである場合、&%SetOrClass で閉じ
られる。")
(documentation reflexiveOn JapaneseLanguage "&%BinaryRelation は、&%SetOrClass のすべての
インスタンスがそれ自体との関係を持つ場合にのみ、&%SetOrClass に対して再帰的である。")
(documentation irreflexiveOn JapaneseLanguage "&%BinaryRelation は、&%SetOrClass のインス
タンスがそれ自体との関係を持たない場合にのみ、&%SetOrClass に対して非再帰的である。")
(documentation partialOrderingOn JapaneseLanguage "&%BinaryRelation は、&%SetOrClass 上の
部分的な順序付けで、 &%AntisymmetricRelation と &%TransitiveRelation の両方である場合にのみ、
関係が &%SetOrClass で &%reflexiveOn である。")
(documentation totalOrderingOn JapaneseLanguage "&%BinaryRelation ?REL は、&%SetOrClass に
対する合計順序付けが、&%SetOrClass 内のすべての?INST1および?INST2に対する (?REL ?INST1 ?INST2)
または (?REL ?INST2 ?INST1) のどちらかの部分順序である場合のみである。")
(documentation trichotomizingOn JapaneseLanguage "A &%BinaryRelation ?REL は、&%SetOrClass
のすべてのインスタンス?INST1と?INST2に対して、(?REL ?INST1 ?INST2)
(?REL ?INST2 ?INST1)または(?INST1 ?INST2と等しい) のいずれかを保持している場合にのみ、
&%SetOrClass 三分される。")
(documentation equivalenceRelationOn JapaneseLanguage "&%BinaryRelation は、関係が
&%SetOrClass の　&%reflexiveOn であり、&%TransitiveRelation と &%SymmetricRelation の両方で
ある場合にのみ、&%SetOrClass の &%equivalenceRelationOn である。")
(documentation distributes JapaneseLanguage "&%BinaryFunction ?FUNCTION1は、すべての ?INST1、
?INST2、および ?INST3に対して、(?FUNCTION1 ?INST1 (?FUNCTION2 ?INST2 ?INST3)) が
(?FUNCTION2 (?FUNCTION1 ?INST1 ?INST2) (?FUNCTION1 ?INST1 ?INST3)) と等しい場合に備えて、
別の &%BinaryFunction ?FUNCTION2 に対して配布される。")
(documentation relatedEvent JapaneseLanguage "(relatedEvent ?EVENT1 ?EVENT2) とは、&%Process
?EVENT1 がプロセス ?EVENT2 に関連していることを意味lする。関係は、イベントとそのサブプロセスでは
なく、個別間のイベントである。一方、２つの同じ包括的なイベントの &%subProcesses は &%relatedEvent
であってもよい。引数の順序は、一時的な順序という結果になるわけではない。")
(documentation causes JapaneseLanguage "&%Process の　インスタンス間の因果関係。
(&%causes ?PROCESS1 ?PROCESS2) とは、 &%Process ?PROCESS1 の　インスタンスが　&%Process
?PROCESS2のインスタンスをもたらすことを意味する。")
(documentation causesSubclass JapaneseLanguage "&%Process ?PROCESS のサブクラス間の因果関係。
(&%causesSubclass ?PROCESS1 ?PROCESS2) とは、&%Process ?PROCESS1 のサブクラスが　&%Process
?PROCESS2 を持ち込むことを意味する。　例：(&%causesSubclass &%Killing &%Death) など。")
(documentation causesProposition JapaneseLanguage "(&%causesProposition ?FORMULA1
?FORMULA2) とは、?FORMULA1の原因によって記述された事態の状態、または機械的に事態の状態をもたらし
たり、?FORMULA2の原因によって記述された事態の状態を意味する。　注１：&%entails とは異なり、?FORMULA2
が保持する時間は F1 が保持される時間に先行することはできないが、?FORMULA1 と ?FORMULA2は同時に
保持できる。　注２：&%causesProposition 述語であり、真理関数ではない。　次の規則 (逆置) は保持さ
れない: causesProp ?FORMULA1 ?FORMULA2) (causesProp (not ?FORMULA2) (not ?FORMULA1)))。")
(documentation copy JapaneseLanguage "&%Object を &%Object の正確なコピーに関連付け、
正確なコピーは(おそらく)空間的および/または時間的な場所を除くすべてのプロパティに関して元のコピーと
区別できない。")
(documentation time JapaneseLanguage "この関係は、前者の一時的な寿命が後者を含む場合に備えて、
&%Physical のインスタンスと &%TimePosition のインスタンスの間に保持されます。言い換えれば、
(&%time ?THING ?TIME) とは、?THING が ?TIME に存在していたか、または ?TIME で起こったことを意味
する。 注：&%holdsDuring が &%Formula のインスタンスに対して行うことを &%time もインスタンスに
対して行う。 定数 &%located と &%time は、それぞれ基本的な空間および時間の述語である。")
(documentation holdsDuring JapaneseLanguage "(&%holdsDuring ?TIME ?FORMULA) とは、?FORMULA
で示される命題が時間枠 ?TIME に当てはまることを意味する。　注：これは、?FORMULA が &%temporalPart
であるすべての?TIMEの &%TimePoint に当てはまることを意味する。")
(documentation capability JapaneseLanguage "(&%capability ?PROCESS ?ROLE ?OBJ) とは、?OBJ
が、タイプ ?PROCESS の &%Processes で ?ROLE の役割を果たす能力を持っている、という意味である。")
(documentation exploits JapaneseLanguage "(&%exploits ?OBJ ?AGENT) とは、?OBJ が、&%Process
の不特定インスタンスの &%resource として?AGENTによって使用される。この &%Predicate は、その対応
する公理が示すように、&%agentおよび &%resource の二項関係の合成である。")
(documentation hasPurpose JapaneseLanguage "この &%Predicate は、従来の目標、すなわち概念を表
す。　例：中和されたエージェントの意図を持つ目標。それに応じて、(&%hasPurpose ?THING ?FORMULA)
とは、&%Physical ?THING のインスタンスが、その目的として、?FORMULA によって表される &%Proposition
を有することを意味する。 注：&%Predicates &%hasPurpose と &%result の間には重要な意味の違いが
ある。　後者の第２の引数は前者の第２の引数を満たすことができ、従来の目標は期待される望ましい結果
だが、結果も期待も望ましくないかもしれない。　たとえば、機械プロセスには結果が出ないが、目標はなく、
目的のない放浪は結果を持つかもしれないが、目標はなく、学習プロセスには結果のない目標を持つ場合が
ある。")
(documentation hasPurposeForAgent JapaneseLanguage "物理的な特定のインスタンスに対するエー
ジェントの認知的態度を表す。より正確には、(&%hasPurposeForAgent ?THING ?FORMULA ?AGENT) とは、
?AGENTに対する?THINGの目的が ?FORMULA によって表される命題であることを意味する。非常に複雑な問題
がここで関与している。特に、第１次述語計算の推論の規則は、この &%Predicate の２番目の引数位置に対
する真理保存ではない。")
(documentation hasSkill JapaneseLanguage "ある程度まで実践/実証される能力の追加の制限を伴った
 &%capability &%Predicateと同様である。")
(documentation confersNorm JapaneseLanguage "&%Formula が &%ObjectiveNorm を保持していると
&%Entity がもたらすとき、&%Formula、&%Entity、および &%ObjectiveNorm 間で関係を表す。")
(documentation deprivesNorm JapaneseLanguage "&%Formula が &%ObjectiveNorm を保持していない、
と &%Entity がもたらすとき、&%Entity、&%Formula、および &%ObjectiveNorm 間で関係を表す。")
(documentation partlyLocated JapaneseLanguage "(&%partlyLocated ?OBJ1 ?OBJ2) とは、
&%Physical ?OBJ1 のインスタンスが少なくとも部分的に ?OBJ2 に配置されたことを意味する。　例：
イスタンブールは &%Asia に部分的に位置し、一部は &%Europe に位置している。　注：&%partlyLocated
は最も基本的なローカリゼーション関係である:  &%located は即時の &%partlyLocated の &%subrelation
で、&%exactlyLocated は即時の &%located の &%subrelation である。")
(documentation located JapaneseLanguage "(&%located ?OBJ1 ?OBJ2) とは、?OBJ1 が ?OBJ2 で
&%partlyLocated であり、?OBJ2 で &%located ではない ?OBJ1 の &%part がないことを意味する。")
(documentation eventPartlyLocated JapaneseLanguage "(&%eventPartlyLocated ?PROC ?OBJ)とは、
&%Process ?PROC のいくつかの &%subProcess が &%Object ?OBJ に位置していることを意味する。")
(documentation eventLocated JapaneseLanguage "(&%eventLocated ?PROC ?OBJ) とは、&%Process
?PROC 全体が &%Object ?OBJ 上に配置され、?PROC のすべての &%subProcess が ?OBJ上に配置されるこ
とを意味する。")
(documentation exactlyLocated JapaneseLanguage "オブジェクトの実際の最小位置。これは、より
一般的な &%Predicate &%located のサブリレーションである。")
(documentation between JapaneseLanguage "(between ?OBJ1 ?OBJ2 ?OBJ3) とは、?OBJ2が ?OBJ1と
?OBJ3 の間に空間的に配置されたことを意味する。　注：?OBJ2 が ?OBJ1 と ?OBJ3 の間に直接あること
を意味する。　例：?OBJ1 と ?OBJ3 の予測は OBJ2 と重なる。")
(documentation betweenOnPath JapaneseLanguage "(betweenOnPath ?OBJ1 ?OBJ2 ?OBJ3 ?PATH) とは、
?OBJ2 がパス ?PATH 上の ?OBJ1 と ?OBJ3 の間に空間的に配置されたことを意味する。　注：これは、
特定のパスに関して他のオブジェクト間のオブジェクトも単にそれらの間に存在するため、より特殊な関係で
ある。")
(documentation traverses JapaneseLanguage "(&%traverses ?OBJ1 ?OBJ2) とは、?OBJ1が ?OBJ2を
横切るか、または延長することを意味する。　注：&%crosses と &%penetrates は &%traverses のサブ
リレーションである。")
(documentation crosses JapaneseLanguage "(crosses ?OBJ1 ?OBJ2) とは、&%Object ?OBJ1 が
Object ?OBJ2 に 接続させれずに &%traverses 。")
(documentation penetrates JapaneseLanguage "(penetrates ?OBJ1 ?OBJ2) とは、?OBJ1 が少なくとも
1つの寸法 (長さ、幅、または深さ) に沿って OBJ2 に対して &%connected ことを意味する。")
(documentation WhereFn JapaneseLanguage "&%Object と &%Object が存在する &%TimePoint を、
その &%TimePoint に &%Object が存在していた &%Region にマップする。")
(documentation possesses JapaneseLanguage "&%Relationは、&%Agent が &%Object の所有権を持つ
場合に &%Agent と &%Object の間に保持される 。")
(documentation PropertyFn JapaneseLanguage "&%UnaryFunction は、&%Agent を &%Agent が所有する
O&%Object &%Set にマップする。")
(documentation precondition JapaneseLanguage "非常に一般的な &%Predicate。(&%precondition
?PROC1 ?PROC2) とは、?PROC1 のインスタンスが存在する場合にのみ ?PROC2 のインスタンスが存在できる
ことを意味する。")
(documentation hindersSubclass JapaneseLanguage "非常に一般的な&%Predicate。
(&%hindersSubclass ?PROC1 ?PROC2) とは、P&%Process ?PROC がサブクラスを妨げるか、&%Process
?PROC2の発生を妨げることを意味する。　例：オブジェクトを妨害すると、サブクラスの移動が妨げらる。
注：これは、インスタンス間ではなく、&%Process のタイプ間の関係である。")
(documentation preventsSubclass JapaneseLanguage "非常に一般的な &%Predicate。
(preventsSubclass ?PROC1 ?PROC2) とは、?PROC1が?PROC2の発生をサブクラスに防止することを意味
する。つまり、?PROC1が特定の時間と場所で発生している場合、?PROC2は同時に発生することはできない。
例：サブクラスを罹患から防ぐための接種をする。　注：これは、インスタンス間ではなく、&%Process タ
イプ間の関係である。")
(documentation prevents JapaneseLanguage "非常に一般的な &%Predicate。(prevents ?PROC1 ?PROC2)
とは、?PROC1のインスタンスが ?PROC2 の発生を防ぐことを意味する。　注：この関係と &%preventsSubclass
の違いは、インスタンスクラスではなくクラスに関連している。")
(documentation hinders JapaneseLanguage "一般的な &%Predicate は、(hinders ?PROC1 ?PROC2)
が?PROC2の発生の?PROC1 &%decreasesLikelihood のインスタンスを意味する。　&%Process のクラスに
関連するより強く &%hindersSubclass の &%prevents と比較する。")
(documentation refers JapaneseLanguage "(&%refers ?OBJ1 ?OBJ2) とは、?OBJ1 が O2 への参照に言
及または含むことがあることを意味する。 注：%refersは、おそらく何かがこの他の事を参照している場合に
のみ何かを表すことができるので、%refers は &%represents よりも一般的な意味である。　例：石油価格
の最近の変化をトピックにした記事は、他の多くのことを指すかもしれない。　経済の一般的な状態、カリ
フォルニアの天候、地球温暖化の見通し、代替エネルギー源のオプション、様々な石油会社の株価など。")
(documentation names JapaneseLanguage "(&%names ?STRING ?ENTITY) とは、?ENTITY が
&%SymbolicString ?STRING をその名前として持っていることを意味する。　注：&%name と &%represents
は ２つの即時の &%refers の &%subrelation である。 述語 &%name は、参照項目が単に内容を含まない
タグである場合に使用され、述語 &%represents はそのようなコンテンツを持つ項目を参照するために使用
される。")
(documentation uniqueIdentifier JapaneseLanguage "&%Entity のインスタンスを一意に識別する
&%name のクラス。 &%uniqueIdentifier の例としては、データベース アプリケーションのテーブルのキー
と ISBN (国際標準書籍番号) がある。")
(documentation represents JapaneseLanguage "非常に一般的な記号論 &%Predicate。
(&%represents ?THING ?ENTITY) とは、?THING が何らかの方法で?ENTITYに対して示し、表現、意味、
描写、記述などすることを意味する。　&%Predicates &%containsInformation と　&%realization は
&%represents の　サブリファリレーションである。 注：&%represents は、&%refers の　サブリレー
ションである。それがこの他のものを参照している場合にのみ何かが他のものを表すことができるのからであ
る。&%names のドキュメント文字列を参照。")
(documentation representsForAgent JapaneseLanguage "非常に一般的な述語。
(&%representsForAgent ?ENTITY1 ?ENTITY2 ?AGENT) とは、AGENT が ?ENTITY2 を「表す」ために、
?ENTITY1 を使用することを選択することを意味する。")
(documentation representsInLanguage JapaneseLanguage "非常に一般的な述語。
(&%representsInLanguage ?THING ?ENTITY ?LANGUAGE) とは、 &%Language ?LANGUAGE で
&%LinguisticExpression ?THING とは　?ENTITY  を表す。")
(documentation equivalentContentClass JapaneseLanguage "&%BinaryPredicate は
&%ContentBearingPhysical の２つのサブクラスを関連付ける。　(&%equivalentContentClass ?CLASS1
?CLASS2) とは、?CLASS1の各インスタンスによって表現されるコンテンツは、?CLASS2の各インスタンスに
よっても表現され、その逆も同様である。例えば、アガサ・クリスティの『オリエント急行殺人事件』の英語
版とロシア語版の関係が挙げられる。　注：(&%equivalentContentClass ?CLASS1 ?CLASS2) は
(&%subsumesContentClass ?CLASS1 ?CLASS2) および (&%subsumesContentClass ?CLASS2 ?CLASS1)を
意味する。")
(documentation subsumesContentClass JapaneseLanguage "&%BinaryPredicate は、
&%ContentBearingPhysical の２つのサブクラスを関連付ける 。(&%subsumesContentClass ?CLASS1
?CLASS2) とは、?CLASS2の各インスタンスによって表されるコンテンツも ?CLASS1の各インスタンスによっ
て表される。　例：詩とそのスタンザの１つまたは本とその章の間の関係。　注１：これはインスタンスでは
なく、&%ContentBearingObject のサブクラス間の関係である。インスタンスを関連付けたい場合は、
&%Predicate &%subsumesContentInstance を使用できる。　注２：多くの場合、&%subsumesContentClass
が必要である。例えば、聖書のジェームズ王版とその創世記との関係を考えてみる。このリレーションシップは、
単一のインスタンスだけでなく、このエディションのすべてのコピーに対して当てはまる。")
(documentation equivalentContentInstance JapaneseLanguage "&%BinaryPredicate は、
&%ContentBearingPhysical の２つのインスタンスに関連する。　(&%equivalentContentInstance
?OBJ1 ?OBJ2) とは、?OBJ1で表される内容が?OBJ2で表される内容と同一であることを意味する。
例えば、弁護士への手紙の手書きの草稿と同じ手紙のタイプされたコピーとの関係である。　注：
(&%equivalentContentInstance ?OBJ1 ?OBJ2) は　(&%subsumesContentInstance ?OBJ1 ?OBJ2)
および (&%subsumesContentInstance ?OBJ2 ?OBJ2) の結果となる。")
(documentation subsumesContentInstance JapaneseLanguage "&%BinaryPredicate は、
&%ContentBearingPhysical の２つのインスタンスに関連する。(&%subsumesContentInstance ?OBJ1 ?OBJ2)
とは、?OBJ2によって表されるコンテンツが?OBJ1によって表されるコンテンツの一部であることを意味する。
例として、手書きの詩とそのスタンザの関係である。　注：これは、&%Classes ではなく、インスタンス間の
関係である。　&%Classes 間のコンテンツリレーションシップをアサートする場合、（例えば、知的な仕事の
バージョンとその作業の一部の間など）関係　&%subsumesContentClass を使用する必要がある。")
(documentation realization JapaneseLanguage "&%represents の サブリレーション。(&%realization
?PROCESS ?PROP) とは、PROCESS が　?PROPP の内容を表すプロセスであることを意味する。　例：楽譜の
内容や詩の読み取りを実現する特定の音楽パフォーマンスなど。")
(documentation expressedInLanguage JapaneseLanguage "(&%expressedInLanguage ?EXPRESS ?LANG)
とは、 &%LinguisticExpression ?EXPRESS が &%Language ?LANG の一部であることを意味する。")
(documentation subProposition JapaneseLanguage "(&%subProposition ?PROP1 ?PROP2) とは、
?PROP1が &%Proposition で、&%Proposition ?PROP2 の適切な部分である、という意味である。言い換え
れば、&%subProposition は、大量の抽象的なコンテンツの &%properPart の類似体である。")
 (documentation subPlan JapaneseLanguage "(&%subPlan ?PLAN1 ?PLAN2) とは、?PLAN1が?PLAN2の
 適切な部分である &%Plan であることを意味する。この関係は、一般に、特定のコンテキストでサポート
 &%Plan を全体的な &%Plan に関連付けるために使用される。")
(documentation uses JapaneseLanguage "(&%uses ?OBJECT AGENT) とは、?OBJECTが　?AGENT によっ
て不特定の &%Process の計測器として使用される、という意味である。 この &%Predicate は、その対応す
る公理が示すように、 &%CaseRoles &%agent および &%instrument の組成物である。")
(documentation MultiplicationFn JapaneseLanguage "?NUMBER1 と ?NUMBER2 が &%Number の場合、
(&%MultiplicationFn ?NUMBER1 ?NUMBER2) はこれらの数値の算術積である。")
(documentation AdditionFn JapaneseLanguage "?NUMBER1 と ?NUMBER2 が &%Number の場合、
(&%AdditionFn ?NUMBER1 ?NUMBER2) はこれらの数値の算術合計である。")
(documentation SubtractionFn JapaneseLanguage "?NUMBER1 と ?NUMBER2 が &%Number の場合、
(&%SubtractionFn ?NUMBER1 ?NUMBER2) は ?NUMBER1 と ?NUMBER2 の算術差です。すなわち、?NUMBER1
マイナス ?NUMBER2。 例外は、?NUMBER1 が 0 に等しい場合に発生し、その場合 (&%SubtractionFn
?NUMBER1 ?NUMBER2) は　?NUMBER2の否定である。")
(documentation DivisionFn JapaneseLanguage "?NUMBER1 と ?NUMBER2 が &%Number の場合、
(&%DivisionFn ?NUMBER1 ?NUMBER2) は ?NUMBER1を ?NUMBER2で除算した結果である。注１：?NUMBER1 =
1 (&%DivisionFn ?NUMBER1 ?NUMBER2) が ?NUMBER2 の逆数である場合がある。　注２：?NUMBER2 = 0
の場合、(&%DivisionFn ?NUMBER1 ?NUMBER2) は未定義である。")
(documentation AbsoluteValueFn JapaneseLanguage "(&%AbsoluteValueFn ?NUMBER) の値は
&%RealNumber ?NUMBER の絶対値である。")
(documentation CeilingFn JapaneseLanguage "(&%CeilingFn ?NUMBER) は、&%RealNumber ?NUMBER
より最大以上以上の最小 &%Integer  を返す。")
(documentation CosineFn JapaneseLanguage "(&%CosineFn ?DEGREE) は &%PlaneAngleMeasure
?DEGREEの余弦をす。 ?DEGREEの余弦は、直角三角形の斜辺に対する?DEGREEの横の比率である。")
(documentation DenominatorFn JapaneseLanguage "(&%DenominatorFn ?NUMBER) は、&%RealNumber
?NUMBERの正規減少フォームの分母を返す。")
 (documentation ExponentiationFn JapaneseLanguage "(&%ExponentiationFn ?NUMBER ?INT) は、
 &%RealNumber ?NUMBER の &%Integer ?INT 乗を返す。")
(documentation FloorFn JapaneseLanguage "(&%FloorFn ?NUMBER) は、 &%RealNumber ?NUMBER 以下
の最大 &%Integer を返す。")
(documentation GreatestCommonDivisorFn JapaneseLanguage "(&%GreatestCommonDivisorFn
?NUMBER1 ?NUMBER2 ... ?NUMBER) は、?NUMBER1 から ?NUMBER までの最大共通除数を返す。")
(documentation multiplicativeFactor JapaneseLanguage "(multiplicativeFactor ?NUMBER1
?NUMBER2) とは、?NUMBER1 が ?NUMBER2 の係数、すなわち ?NUMBER2 であることを意味する。?NUMBER1
は、結果として ?NUMBER2 を与えるためにいくつかの &%Intege を乗算できる。")
(documentation ImaginaryPartFn JapaneseLanguage "(&%ImaginaryPartFn ?NUMBER) は、-1 の平方
根を持つ ?NUMBER の部分を係数として返す。")
(documentation IntegerSquareRootFn JapaneseLanguage "(&%IntegerSquareRootFn ?NUMBER) は、
?NUMBER の整数平方根を返す。")
(documentation LeastCommonMultipleFn JapaneseLanguage "(&%LeastCommonMultipleFn
?NUMBER1 ?NUMBER2 ... ?NUMBER) は、?NUMBER1から ?NUMBERまでの最も一般的でない倍数を返す。")
(documentation LogFn JapaneseLanguage "(LogFn ?NUMBER ?INT) は、&%Integer ?INTで示される
ベース内の &%RealNumber ?NUMBERの対数を返す。")
(documentation MaxFn JapaneseLanguage "(&%MaxFn ?NUMBER1 ?NUMBER2) は、?NUMBER1と?NUMBER2の
最大数である。?NUMBER1が?NUMBER2と等しい場合、&%MaxFn は引数の１つを返す。")
(documentation MinFn JapaneseLanguage "(&%MinFn ?NUMBER1 ?NUMBER2) は、?NUMBER1と?NUMBER2の
最小値である。?NUMBER1が?NUMBER2と等しい場合、&%MinFn は引数の１つを返す。")
(documentation NumeratorFn JapaneseLanguage "(&%NumeratorFn ?NUMBER) は、正規の縮小フォーム
?NUMBER の分子を返す。")
(documentation Pi JapaneseLanguage "&%Pi は、円の周囲の直径に対する比率である &%RealNumber
である。これは、3.141592653589793 とほぼ同じである。")
(documentation NumberE JapaneseLanguage "&%NumberE は、自然対数のベースである  &%RealNumber
である。これは、2.718282とほぼ同じである。")
(documentation RationalNumberFn JapaneseLanguage "(&%RationalNumberFn ?NUMBER) は、?NUMBER
の合理的な表現を返す。")
(documentation RealNumberFn JapaneseLanguage "(RealNumberFn ?NUMBER) は、&%RealNumber で
ある?NUMBERの部分を返す。")
(documentation ReciprocalFn JapaneseLanguage "(ReciprocalFn ?NUMBER) は、乗算演算子
(&%MultiplicationFn) に対する?NUMBERの逆数要素、すなわち1/?NUMBERである。すべての数値に相互要素
があるわけではない。　例えば、数値０はそうではない。数値?NUMBERに相互?RECIPがある場合、?NUMBERと
?RECIPの積は１になる。　例：3*1/3 = 1。要素の逆数は、要素に &%ExponentiationFn 関数を power -1
に適用することに対して &%equal である。")
(documentation RemainderFn JapaneseLanguage "(RemainderFn ?NUMBER ?DIVISOR) は、数値?NUMBER
の残りを数値?DIVISORで割った値である。結果の符号は?DIVISOR と同じである。")
(documentation RoundFn JapaneseLanguage "(&%RoundFn ?NUMBER) は、番号行の?NUMBERに最も近い
&%Integer。?NUMBERが２つの &%Integer の中間にある場合 (たとえば 3.5)、大きな &%Integer を示
す。")
(documentation SignumFn JapaneseLanguage "(SignumFn ?NUMBER) は、?NUMBERの符号を示し、−１、
１、または０のいずれかの値を示す。")
(documentation SineFn JapaneseLanguage "(&%SineFn ?DEGREE) は、&%PlaneAngleMeasure ?DEGREE
の正弦である。?DEGREEの正弦は、直角三角形の斜辺に対する?DEGREEの反対側の比率である。")
(documentation SquareRootFn JapaneseLanguage "(SquareRootFn ?NUMBER) は、?NUMBERの主な平方
根である。")
(documentation TangentFn JapaneseLanguage "(&%TangentFn ?DEGREE) は、&%PlaneAngleMeasure
?DEGREE の接線である。　?DEGREEの接線は、直角三角形の?DEGREEの横の反対側の?DEGREEの比率である。")
(documentation identityElement JapaneseLanguage "万が一すべてのインスタンス ?INST に対して、
?FUNCTION を?INSTとに?IDに適用した場合、?INSTになることに備えて、オブジェクト ?IDは、
&%BinaryFunction ?FUNCTIONの ?ID要素である。")
(documentation SuccessorFn JapaneseLanguage "&%UnaryFunction は、&%Integer をその後身にマッ
プする。例：５の後身は６である。")
(documentation PredecessorFn JapaneseLanguage "&%UnaryFunction は、&%Integer をその前身に
マップする。　例：５の前身は４である。")
(documentation average JapaneseLanguage "&%List を &%RealNumber に関連付ける部分関数で、
&%Listに &%RealNumber であるリスト要素のみが含まれる。&%List に関連付けられた &%RealNumber は、
&%List の &%RealNumber の数学的平均をリスト要素の総数で割った値に等しい。")
(documentation subset JapaneseLanguage "(subset ?SET1 ?SET2) は、&%Set ?SET1の&%element も
&%Set ?SET2 の &%element の場合に備えて当てはまる。")
(documentation element JapaneseLanguage "(element ?ENTITY ?SET) は、?ENTITY が &%Set ?SETに
含まれている場合に当てはまる。&%Entity は、後者が &%Set の場合にのみ、別の &%Entity の &%element
にすることができる。")
(documentation UnionFn JapaneseLanguage "&%BinaryFunction は、これらの &%SetOrClass の結合に
２つの &%SetOrClasses をマップする 。　オブジェクトは、どちらかの &%SetOrClasse の　&%instance
である場合に備えて、２つの &%SetOrClass の結合の &%element である。")
(documentation IntersectionFn JapaneseLanguage "&%BinaryFunction は、２つの &%SetOrClass を
これらの &%SetOrClass の交点にマップする 。オブジェクトは、つの &%SetOrClass の両方のインスタンス
である場合に備えて、２つの &%SetOrClass の交点のインスタンスである。")
(documentation RelativeComplementFn JapaneseLanguage "&%BinaryFunction は、これらの
&%SetOrClass の違いに2つの &%SetOrClassC をマップする。　より正確には、(&%RelativeComplementFn
?CLASS1 ?CLASS2) は、?CLASS2のインスタンスでもない?CLASS1のインスタンスを示す。")
(documentation ComplementFn JapaneseLanguage "指定された &%SetOrClass C の補数は、C のインス、
ンスではないすべてのものである。言い換えると、オブジェクトはCのインスタンスでない場合に備えて、
&%SetOrClass C の補数のインスタンスである。")
(documentation GeneralizedUnionFn JapaneseLanguage "A &%UnaryFunction は、&%Classes の
&%SetOrClas を単一の引数として受け取り、元の &%SetOrClass 内のすべての &%Class のマージである
&%Classes を返す。 すなわち、&%SetOrClass は、元の　&%SetOrClass のインスタンスのインスタンスで
あるインスタンスだけを含む。")
(documentation GeneralizedIntersectionFn JapaneseLanguage "&%UnaryFunction は、&%Class の
%SetOrClass を単一の引数として受け取り、元の %SetOrClass の内のすべての %SetOrClass の交点であ
る %SetOrClass を返す。 すなわち、%SetOrClass は元の %SetOrClass のすべてのインスタンスのインス
タンスであるインスタンスだけを含む。")
(documentation CardinalityFn JapaneseLanguage "(CardinalityFn ?CLASS) は、&%SetOrClass
?CLASS内のインスタンスの数または ?CLASS &%Collection のメンバーの数を返す。")
(documentation NullSet JapaneseLanguage "インスタンスを含まない任意の　&%SetOrClass。")
(documentation NonNullSet JapaneseLanguage "少なくとも１つのインスタンスを含む任意の
&%SetOrClass。")
(documentation FiniteSet JapaneseLanguage "有限数の要素を含む &%Set。")
(documentation PairwiseDisjointClass JapaneseLanguage "&%SetOrClass は、&%SetOrClass のすべ
てのインスタンスが &%SetOrClass の他のすべてのインスタンスに対して &%equal または &%disjoint で
ある場合に備えて、&%PairwiseDisjointClass である。")
(documentation MutuallyDisjointClass JapaneseLanguage "&%SetOrClass は、元の &%SetOrClass
のすべてのインスタンスのインスタンスが存在しない場合に備えて、 &%MutuallyDisjointClass である。")
(documentation KappaFn JapaneseLanguage "変数と変数の少なくとも 1 つの非連結オカレンスを含む
数式の2つの引数を受け取るクラス形成演算子。変数と数式に &%KappaFn を適用した結果は、数式を満たす
ものの &%SetOrClass である。例えば、次の式 (KappaFn ?NUMBER (and (instance ?NUMBER PrimeNumber)
(lessThan ?NUMBER 100))) で、100 未満の素数の &%SetOrClass を示すことができる。注：現在、この
関数の割り当てはサポートされていないため、この関数の使用は勧められない。")
(documentation Graph JapaneseLanguage "グラフの &%Clas は、グラフが &%GraphArcs によって接続
された &%GraphNode のセットであると理解される。注１：この &%Class には、接続されたグラフのみが含ま
れる。　すなわち、グラフは、任意の2つの間にある&%GraphPath内にある。注２：すべての  &%Graph には
少なくとも２つの &%GraphArcs と ３つの &%GraphNodes が含まれている必要がある。")
(documentation DirectedGraph JapaneseLanguage "有向グラフの &%Class。 有向グラフは、すべての
&%GraphArcs が方向を持つ &%Graph である。 すなわち、すべての &%GraphArc には初期ノード
(&%InitialNodeFn を参照) とターミナルノード (&%TerminalNodeFn を参照) がある。")
(documentation Tree JapaneseLanguage "ツリーは &%GraphLoops がない &%DirectedGraph である。")
(documentation GraphPath JapaneseLanguage "非公式には、&%Graph 内の2つの &%GraphNode 間の単一
の指向ルート。正式には、&%DirectedGraphは、元の &%Graph の &%subGraph であり、&%DirectedGraph
内の２つの &%GraphArc が同じ初期ノード (&%InitialNodeFn を参照) または同じ端末ノード
(&%TerminalNodeFn を参照)を持たない。")
(documentation GraphCircuit JapaneseLanguage "&%GraphPath は、同時に &%GraphNode で開始し、
(&%BeginNodeFn を参照) で終了 (&%EndNodeFn を参照) する。")
(documentation MultiGraph JapaneseLanguage "マルチグラフの &%Class 。マルチグラフは、複数の
&%GraphArc によって接続されている &%GraphNode の少なくとも1つのペアを含む &%Graph である。")
(documentation PseudoGraph JapaneseLanguage "擬似グラフの &%Class。擬似グラフは、少なくとも
1つの &%GraphLoop を含む &%Graph である。")
(documentation GraphElement JapaneseLanguage "&%Graph の非合成的なパーツ。これらのパーツは、
&%GraphNode および &%GraphArc に制限されている。")
(documentation GraphNode JapaneseLanguage "&%Grap は &%GraphNode および &%GraphArc で構成さ
れる。すべての &%GraphArc は &%GraphNode によってリンクされている。")
(documentation GraphArc JapaneseLanguage "&%Graph は &%GraphNode および &%GraphArc で構成さ
れる。すべての &%GraphArc は ２つの &%GraphNode をリンクする。")
(documentation GraphLoop JapaneseLanguage "&%GraphArcは、&%GraphNode がそれ自体にリンクされ
ている。")
(documentation links JapaneseLanguage "&%TernaryPredicate は、2つの &%GraphNode を接続してい
る &%GraphArc を指定する 。")
(documentation graphPart JapaneseLanguage "&%Graph とそのパーツの基本的な関係。(&%graphPart
?PART ?GRAPH) とは、?PARTが　&%Graph ?GRAPH の　&%GraphArc または　&%GraphNode であることを
意味する。")
(documentation subGraph JapaneseLanguage "一方の &%Graph  がもう一方の &%Graph の一部である
場合の2つの &%Graph の関係。 (&%subGraph ?GRAPH1 ?GRAPH2) とは、?GRAPH1が ?GRAPH2の一部である
ことを意味する。")
(documentation pathLength JapaneseLanguage "&%BinaryPredicate は、&%GraphPath の長さ
(&%GraphNodes 数で) を指定する。　(&%pathLength ?PATH ?NUMBER)とは、&%GraphPath ?PATH に
?NUMBER ノードがあることを意味する。")
(documentation InitialNodeFn JapaneseLanguage "&%UnaryFunction は、&%GraphArc を &%GraphArc
の初期ノードにマップする。　注：これは部分的な関数。特に、&%DirectedGraph の一部ではない
&%GraphArc の関数は未定義である。")
(documentation TerminalNodeFn JapaneseLanguage "&%UnaryFunction は、 &%GraphArc を
&%GraphArc の端子ノードにマップする。 注：これは部分的な関数。特に、&%DirectedGraph の一部では
ない &%GraphArc の関数は未定義である。")
(documentation BeginNodeFn JapaneseLanguage "&%UnaryFunction は、&%GraphPath を &%GraphPath
の先頭である &%GraphNode にマップする。　注：&%InitialNodeFn (&%GraphArc と &%GraphNode を関
連付ける) とは異なり、&%BeginNodeFn は完全な関数であり、すべての &%GraphPath には始まりがある。")
(documentation EndNodeFn JapaneseLanguage "&%UnaryFunction は、&%GraphPath を &%GraphPath の
終わりである &%GraphNode にマップする。 注：&%TerminalNodeFn(&%GraphArc を　&%GraphNode に関
連する)とは異なり、&%EndNodeFn は合計関数であり、すべての &%GraphPath には終わりがある。")
(documentation arcWeight JapaneseLanguage "この述部は、&%Graph の &%GraphArc の値を示す。これ
は、ロードネットワーク内のロードの長さ、または配管システムのパイプの流動率にマップできる。")
(documentation PathWeightFn JapaneseLanguage "&%UnaryFunction は、&%GraphPath を &%GraphPath
内にある &%GraphArcs 上の &%arcWeights の合計にマップする。")
(documentation MinimalWeightedPathFn JapaneseLanguage "この &%BinaryFunction は、2つの
&%GraphNode 間の加重円弧の最小合計を持つ2つの &%GraphNode を &%GraphPath に割り当てる。")
(documentation MaximalWeightedPathFn JapaneseLanguage "この &%BinaryFunction は、2つの
&%GraphNodes 間の加重円弧の最大合計を持つ2つの &%GraphNode を &%GraphPath に割り当てる。")
(documentation GraphPathFn JapaneseLanguage "&%BinaryFunctionは、2つの &%GraphNode をこれ
らの2つのノード間の &%GraphPath の &%Class にマップする。 注：2つの &%GraphNode は同じ &%Graph
に属している必要がある。")
(documentation CutSetFn JapaneseLanguage "&%UnaryFunction は、切り取るとグラフを２つの別々の
グラフに分割する &%GraphPath の &%Class の &%Graph を割り当てる。特定のグラフに複数のカットセット
がある場合がある。")
(documentation MinimalCutSetFn JapaneseLanguage "&%UnaryFunction は、&%Graph のカットセット
を構成し、&%GraphArc の数が最も少ない &%GraphPath の &%Graph &%Class を割り当てる。")
(documentation abstractCounterpart JapaneseLanguage "(abstractCounterpart ?AB ?PHYS) は、
&%Physical エンティティの一部の次元で理想的なモデルである &%Abstract エンティティに &%Physical
エンティティを関連付ける。　例：&%Abstract &%GraphNode は &%ComputerNetwork 内の実際の &%Computer
の対応であると述べることができる。")
(documentation PhysicalSystem JapaneseLanguage "&%PhysicalSystem は、複雑な &%Physical のク
ラスである。　&%PhysicalSystem は、1つ以上の対応する抽象 &%Graph 表現があるかもしれない。")
(documentation subSystem JapaneseLanguage "(&%subSystem ?SUB ?SYSTEM) とは、&%PhysicalSystem
?SUB が &%PhysicalSystem ?SYSTEM の一部である、という意味である。")
(documentation systemPart JapaneseLanguage "(&%systemPart ?PART ?SYSTEM) とは、&%Physical事
?PARTが &%PhysicalSystem の &%SystemElement であることを意味する。")
(documentation graphMeasure JapaneseLanguage "(graphMeasure ?GRAPH ?MEAS) は、特定の &%Graph
の &%arcWeight に使用される &%UnitOfMeasure を修正する。このような関係を示すには、特定のグラフの
構成要素が &%Physical &%Entity のセットの &%abstractCounterpart であることを伴う。")
(documentation UnitOfMeasure JapaneseLanguage "ある寸法の測定基準。　例えば、&%Meter は &%Inch
と同様に、長さの次元の &%UnitOfMeasure である。&%UnitOfMeasure の本質的な性質は存在せず、むしろ
単位のシステム(例：&%SystemeInternationalUnit)は、直交寸法のセットを定義し、それぞれに単位を割り
当てる。")
(documentation CompositeUnitOfMeasure JapaneseLanguage "この &%Class のインスタンスは、他の
ユニットの機能構成によって定義される %UnitsOfMeasure であり、それぞれが &%CompositeUnitOfMeasure
または &%NonCompositeUnitOfMeasure である可能性がある。")
(documentation NonCompositeUnitOfMeasure JapaneseLanguage "この &%Class のインスタンスは、
1次元に適用される &%UnitsOfMeasure であり、他のユニットの機能構成によって本質的に定義されるわけで
はない。")
(documentation SystemeInternationalUnit JapaneseLanguage "システム・インターナショナル (SI)
ユニットの &%Class。")
(documentation LengthMeasure JapaneseLanguage "&%ConstantQuantity の &%subclass、そのインス
タンスは長さの尺度である。")
(documentation UnitOfLength JapaneseLanguage "この &%Class のすべてのインスタンスは、
&%UnitOfMeasure で、&%MeasureFn と共に &%LengthMeasure のインスタンスを形成するのに使用でき
る。")
(documentation MassMeasure JapaneseLanguage "&%ConstantQuantity の &%subclass、その例は、
&%Object の物質量の尺度である。")
(documentation UnitOfMass JapaneseLanguage "この &%Class のすべてのインスタンスは、&%MeasureFn
と共に &%MassMeasure のインスタンスを形成するために使用できる &%UnitOfMeasure であり、
&%PhysicalObject での問題の量を示す。")
(documentation AreaMeasure JapaneseLanguage "2 次元のスペースの量の測定。")
(documentation UnitOfArea JapaneseLanguage "この &%Class のすべてのインスタンスは、
&%UnitOfMeasure で　&%MeasureFn と共に &%AreaMeasure のインスタンスを形成するのに使用できる。")
(documentation VolumeMeasure JapaneseLanguage "３次元のスペースの量の測定。")
(documentation UnitOfVolume JapaneseLanguage "この &%Class のすべてのインスタンスは、
&%UnitOfMeasure であり、&%MeasureFn を使用して &%VolumeMeasure のインスタンスを形成できる。")
(documentation TemperatureMeasure JapaneseLanguage "温度の測定。科学界では、何かの温度は、物事
を構成する原子や分子の平均速度として理解されている。")
(documentation UnitOfTemperature JapaneseLanguage "この &%Class のすべてのインスタンスは、
&%UnitOfMeasureで、&%MeasureFn と共に &%TemperatureMeasure のインスタンスを形成するのに使用で
きる。")
(documentation CurrencyMeasure JapaneseLanguage "&%ConstantQuantity のこの &%subclass の例
は、&%UnitedStatesDollar、&%UnitedStatesCent、RMB、Lira、Yen、などのいくつかの &%UnitOfCurrency
の観点から記載された &%monetaryValue の尺度である。")
(documentation UnitOfCurrency JapaneseLanguage "この &%Clas のすべてのインスタンスは
&%UnitOfMeasure で、%MeasureFn と共に &%CurrencyMeasure のインスタンスを形成するのに使用でき
る。")
(documentation AngleMeasure JapaneseLanguage "平面または固体内の角度の値。")
(documentation UnitOfAngularMeasure JapaneseLanguage "この &%Class のすべてのインスタンスは、
&%UnitOfMeasure で、&%MeasureFn と共に &%AngleMeasure のインスタンスを形成するのに使用でき
る。")
(documentation PlaneAngleMeasure JapaneseLanguage "平面内の角度の値。")
(documentation SolidAngleMeasure JapaneseLanguage "固体内の角度の値。")
(documentation UnitOfInformation JapaneseLanguage "この C のすべてのインスタンスは
&%UnitOfMeasure で、&%MeasureFn と共に &%InformationMeasure のインスタンスを形成するのに使用
できる。")
(documentation UnitOfDuration JapaneseLanguage "この &%Class のすべてのインスタンスは
&%UnitOfMeasure で、&%MeasureFn と共に &%TimeDuration のインスタンスを形成するのに使用できる。
注：&%TimeDuration は &%TimeMeasure の &%subclass である。")
(documentation MeasureFn JapaneseLanguage "この &%BinaryFunction は、&%RealNumber と
&%UnitOfMeasure をその &%Number 単位にマップする。　これは、&%PhysicalQuantity の「測定された」
インスタンスを表すために使用される。例: ３メートルの概念は(&%MeasureFn 3 &%Meter) として表され
る。")
(documentation UnitOfMeasureMultiplier JapaneseLanguage "この C の各 &%instance は
&%UnaryFunction であり、単一の引数で評価すると、&%UnitOfMeasure は引数の数値倍数である別の
&%UnitOfMeasure を生成する。")
(documentation KiloFn JapaneseLanguage "&%UnaryFunction は、元の &%UnitOfMeasure の 1,000
単位に等しい &%UnitOfMeasure に &%UnitOfMeasure をマップする。例：(&%KiloFn &%Gram) は、1,000
&%Grams である。")
(documentation MegaFn JapaneseLanguage "&%UnaryFunctionは、元の &%UnitOfMeasure の 1,000,000
単位に等しい &%UnitOfMeasure に &%UnitOfMeasure をマップする。　例：(&%MegaFn &%Hertz) は
1,000,000 &%Hertz である。")
(documentation GigaFn JapaneseLanguage "&%UnaryFunction は、元の &%UnitOfMeasure の
1,000,000,000単位に等しい &%UnitOfMeasure に &%UnitOfMeasure をマップする。 例：
(&%GigaFn &%Hertz) は1,000,000,000Hである。")
(documentation TeraFn JapaneseLanguage "&%UnaryFunction は、元の &%UnitOfMeasure の
1,000,000,000,000単位に等しい &%UnitOfMeasure に &%UnitOfMeasure をマップする。 例：
(&%TeraFn &%Hertz) は 1,000,000,000,000,000 &%Hertz である。")
(documentation MilliFn JapaneseLanguage "&%UnaryFunction は、元の &%UnitOfMeasure の .001
単位に等しい &%UnitOfMeasure に &%UnitOfMeasure をマップする。例：(&%MilliFn &%Gram) は .001
&%Grams である。")
(documentation MicroFn JapaneseLanguage "&%UnaryFunction は、元の &%UnitOfMeasure の.000001
単位に等しい &%UnitOfMeasure に &%UnitOfMeasure をマップする。 例：(&%MicroFn &%Meter)は
.000001 M である。")
(documentation NanoFn JapaneseLanguage "&%UnaryFunction は、元の &%UnitOfMeasure の
.000000001単位に等しい &%UnitOfMeasure に &%UnitOfMeasure をマップする。 例：(MF SD) は
.000000000SD である。")
(documentation PicoFn JapaneseLanguage "&%UnaryFunction は、元の UOM の .0000000000001 単位
に等しい &%UnitOfMeasure に &%UnitOfMeasure をマップする。例：(&%PicoFn &%SecondDuration) は
.0000000000000SD である。")
(documentation IntervalFn JapaneseLanguage "&%BinaryFunction は、最初の &%ConstantQuantity
から２番目の &%ConstantQuantity までの間隔を構成する &%ConstantQuantity の &%subclass に
&%ConstantQuantity の２つのインスタンスをマップする。 例：(&%IntervalFn (&%MeasureFn 8
&%Meter) (&%MeasureFn 14 &%Meter)) は、長さが８〜１４メートルの間の量を含む %ConstantQuantity
の &%subclass を返す。")
(documentation MagnitudeFn JapaneseLanguage "&%PhysicalQuantity の大きさは、数量の数値である。
つまり、&%MagnitudeFn は、関連付けられた &%UnitOfMeasure を持つ &%PhysicalQuantity を通常の
&%RealNumber に変換する。　例： (&%ConstantQuantity 2 &%Kilometer) の大きさは &%RealNumber 2
である。　注：特定の単位の数量の大きさは、その単位が元の数量と等しくなる。")
(documentation UnitFn JapaneseLanguage "&%UnitFn は、関連付けられた &%UnitOfMeasure と
&%RealNumber の大きさを持つ &%PhysicalQuantity の &%UnitOfMeasure だけを返す。 例：
&%ConstantQuantity (&%MeasureFn 2 &%Kilometer) の単位は &%UnitOfMeasure &%Kilometer であ
る。")
(documentation PerFn JapaneseLanguage "&%PerFn は、&%PhysicalQuantity の２つのインスタンスを
これら２つのインスタンスで構成される &%FunctionQuantity にマップする。　例：(&%PerFn
(&%MeasureFn 2 (&%MicroFn &%Gram)) (&%MeasureFn 1 (&%KiloFn &%Gram))) は、キログラム当たり２
マイクログラムの &%FunctionQuantity を示す。この関数は、ナレッジ エンジニアが &%FunctionQuantity
のインスタンスを動的に生成できるため便利である。")
(documentation DensityFn JapaneseLanguage "&%DensityFn は、&%MassMeasure のインスタンスと
&%VolumeMeasure のインスタンスを、この質量と体積の比率で表される密度にマップする。　例：
(&%DensityFn (&%MeasureFn 3 &%Gram)(&%MeasureFn 1 &%Liter)) は、1リットル当たり3グラムの密度
を表す。")
(documentation SpeedFn JapaneseLanguage "&%LengthMeasure のインスタンスと &%TimeDuration の
インスタンスを、この距離と時間の比率で表される速度にマップする。　例：(&%SpeedFn (&%MeasureFn 55
&%Mile)(&%MeasureFn 1 &%HourDuration)) は、時速５５マイルの速度を表す。")
(documentation VelocityFn JapaneseLanguage "オブジェクトの速度、つまり速度と速度の方向を指定す
る。　例：(&%VelocityFn (&%MeasureFn 55 &%Mile)(&%MeasureFn 2 &%HourDuration) ?REFERENCE
&%North) は、所定の基準点 ?REFERENCEの北で時速５５マイルの速度を示す。")
(documentation Meter JapaneseLanguage "SI &%UnitOfLength。シンボル: m。 これは、 SIの基本単位
の１つであり、現在は次のように定義されている: %Meter は、&%SecondDuration の 1/299792458 の時間
間隔の間に真空中の光によって移動されるパスの長さである。")
(documentation Gram JapaneseLanguage "キログラムのサブマルチ。 シンボル: g。 1 キログラム =
1000 &%グラム。")
(documentation SecondDuration JapaneseLanguage "SI &%UnitOfDuration。　シンボル: s。これは、
SIのベースユニットの１つであり、現在は以下のように定義されている: &%SecondDuration は、セシウム
１３３原子の地盤状態の２つの超微細レベル間の遷移ベットに対応する放射線の９１９２６３１７７０期間の
持続時間である。")
(documentation Ampere JapaneseLanguage "SI電流測定。シンボル: s。SIのベースユニットの一つ。
&%Ampere は、無限の長さの2つの直線平行導体で維持され、無視できる円形断面の2つの直線的な導体に維持
され、真空中に１M離れて配置された場合、これらの導体間で長さの＆％Meterあたり2 * 10 ^（-7）
＆％Newton に等しい力で生成される。")
(documentation KelvinDegree JapaneseLanguage "SI &%UnitOfMeasure は &%TemperatureMeasure の
インスタンスを示す用語を生成するために &%MeasureFn と共に使用される。シンボル: K。これは SI の基
本単位の１つである (ITS システムの単位でもある)。ケルビンは摂氏の尺度とは異なり、水のトリプルポイ
ントは６２７３.１６ &%KelvinDegree で、&%CelsiusDegrees は　0 &%CelsiusDegree と定義されてい
る。２つの縮尺の間隔の大きさは同じである。定義上、変換定数は ２７３.１５である。")
(documentation Mole JapaneseLanguage "物質単位のSI量。シンボル:モル。これは、SIのベースユニット
の一つ。以下のように定義されている：&%Moleは、炭素１２の０．０１２ &%Kilogram に原子があるのと同じ
数の素数を含むシステムの物質量である。 注：この &%UnitOfMeasure を使用する場合、基本エンティティを
指定する必要がある - 原子、分子、イオン、電子など、またはそのような粒子のグループ。")
(documentation Candela JapaneseLanguage "SI輝度度測定。シンボル: cd。これは SI の基本単位の
１つであり、現在は次のように定義されている: &%Candela は、周波数 540*10^12 &%Hertz の単色放射を
放射し、&%Steradian あたり 1/683 &%Watt のその方向に放射強度を持つソースの、所定の方向の発光強度
である。")
(documentation Liter JapaneseLanguage "メトリック システムの容積単位。現在、１立方デシメートル
(0.001 立方メートル) に等しいと定義されている。シンボル: l。")
(documentation Centimeter JapaneseLanguage "&%Meter のサブマルチ。　シンボル: cm。　&%Meterの
１００番目の部分である。")
(documentation Millimeter JapaneseLanguage "メートルの約数。シンボル:ミリメートル。ミリメート
ルは1メートルの1000分の1である。")
(documentation Kilometer JapaneseLanguage "&%Meter の超多重項。シンボル:km。 &%Meter は
&%Kilometer の1000番目の部分である。")
(documentation Radian JapaneseLanguage "SI平面角度測定。シンボル: rad。円の半径に等しい長さの
円弧でサブエンゲージされた円の角度である。もう 1 つの定義は、円周で半径に等しい円弧を切り取る円の
２つの半径間の平面角度である。&%Radian = m/m = 1。")
(documentation Steradian JapaneseLanguage "SI立体角測定。シンボル：sr。それは面積が球の半径の
正方形に等しい表面の一部によって範囲を定められた球の立体角度である。もう１つの定義は、球の中心に頂
点を持つ立体角度で、球の半径に等しい長さの辺を持つ正方形の表面の面積を切り取る。 &%Steradian =
m^2/m^2 = 1。")
(documentation FrequencyMeasure JapaneseLanguage "&%TimeDependentQuantity の &%subclass、
そのインスタンスは、いくつかの &%Process が発生する周波数の尺度である。")
(documentation UnitOfFrequency JapaneseLanguage "この &%Class のすべてのインスタンスは、
&%UnitOfMeasure で、&%MeasureFn によって &%MeasureFn のインスタンスを形成するのに使用できる。")
(documentation Hertz JapaneseLanguage "SI周波数測定。シンボル: Hz。秒当たりのサイクル数。
&%Hertz = s^(-1)。　注：&%Hertz には変換関数がない。")
(documentation Newton JapaneseLanguage "SI力測定。シンボル:N。これは、&%SecondDuration 当たり
1Mの加速度を1キログラムの質量に与える力である。&%Newton = m*kg*s^(-2)。")
(documentation Pascal JapaneseLanguage "SI圧力測定。シンボル:Pa。これは1平方メートル　&%Meter
あたり &%Newton の圧力である。　&%Pascal = N/m^2 = m^(-1)*kg*s^(-2)。")
(documentation Joule JapaneseLanguage "SIエネルギー測定。シンボル:J。　これは、1Nの塗布点が力
の方向に1Mの距離を変位したときに行われる作業である。 &%Joule = N*m = m^2*kg*s^(-2)。")
(documentation Watt JapaneseLanguage "SI電力測定。シンボル: W。電力を測定する &%UnitOfMeasure、
すなわち　&%TimeDuration で割って生成または消費されるエネルギー。それは　&%SecondDuration 当たり
1つの &%Joule の割合でエネルギー(または仕事)の生産を生み出す力である。")
(documentation Horsepower JapaneseLanguage "電力測定は、746 &%Watts に等しい。")
(documentation Coulomb JapaneseLanguage "SI電荷測定。シンボル:C。これは、各 &%SecondDuration
中に １&%Ampere の電流で導体の断面を通って輸送される電荷の量である。&%Coulomb = s*A。")
(documentation Volt JapaneseLanguage "SI電位測定。記号: V。これは、これらの点間で放散される電力
が　1 &%Watt と等しい場合、1 &%Ampere の定電流を運ぶ導電線の2点間の電位の差である。&%Volt = W/A
= m^2*kg*s^(-3)*A^(-1)。")
(documentation Farad JapaneseLanguage "SI容量測定。シンボル:F。これは、1クーロンに等しい電気の
量で充電すると 1 &%Volt の電位の差が現れるプレート間のコンデンサの容量である。　&%Farad = C/V =
m^(-2)*kg(-1)*s^4*A^2。")
(documentation Ohm JapaneseLanguage "これらの2点間に一定の電位差、可能性として 1 &%Volt が当た
ると導体の２点間の電気抵抗が起こり、この導体内で 1 &%Ampere の電流が発生し、この導体は任意の起電
力の力ではない。 &%Ohm = V/A = m^2*kg*s^(-3)*A^(-2)。")
(documentation Siemens JapaneseLanguage "SI電気伝導度測定。シンボル: S。直流の場合、&%Siemens
における導電は &%Ohms における抵抗の逆数であり、交流電流の場合には、オームのインピーダンスの逆数で
ある。siemens = A/V = m^(-2)*kg(-1)*s^(3)*A^2。")
(documentation Weber JapaneseLanguage "SI磁束測定。シンボル: Wb。これは、1ターンの回路を連結し、
1 &%SecondDuration で均一な速度でゼロに減少するように1 &%Volt の起電力を生成する磁束である。
&%Weber = V*s = m^2*kg*s^(-2)*A^(-1)。" )
(documentation Tesla JapaneseLanguage "SI磁束密度測定。シンボル: T。１ &%Tesla は &%Meter 平
方あたり 1 &%Weber に相当する。 &%Tesla = Wb/m^2 = kg*s^(-2)*A^(-1)。")
(documentation Henry JapaneseLanguage "SI インダクタンス測定。シンボル: H。1 &%Henry は、
&%SecondDuration ごとに1つの &%Ampere で割った1つの &%Volt に相当する。&%SecondDuration 当たり
1 &%Ampere の速度で電流が変化すると、1つの &%Volt の起電力が誘発され、回路は1つの &%Henry のイン
ダクタンスを有する。&%Henry = Wb/A = m^2*kg*s^(-2)*A^(-2)。")
(documentation CelsiusDegree JapaneseLanguage "&%TemperatureMeasure。 水の点位と沸点は、それ
ぞれ、0 &%CelsiusDegrees 及び100 &%CelsiusDegreesである。")
(documentation Lumen JapaneseLanguage "SI発光フラックスメジャー。シンボル: lm。1 &%Candela の
強度を有する均一な点源から1 &%Steradian の1つの固体角度を通って外側に流れる量である。&%Lumen =
cd*sr = cd * 1。")
(documentation Lux JapaneseLanguage "SI照度測定。 シンボル: lx。これは、1つの  &%Lumen が1平方
&%Meter の領域に均等に分布している場合に提供される照明量である。これは、表面上に存在するすべてのポ
イントが 1 &%Candela のポイント ソースから 1 &%Meter であるイルミネーションにも相当する。&%Lux =
lm/m^2 = m^(-2)*cd。")
(documentation Becquerel JapaneseLanguage "SI放射能測定。シンボル: Bq。これは、物質の所定のサン
プルに含まれる放射能の量を測定する。それは、&%SecondDuration ごとに1つの原子崩壊がある放射性元素の
量である。&%Becquerel = s^(-1)。")
(documentation Gray JapaneseLanguage "SI吸収線量率測定。シンボル: Bq。生組織に吸収される放射線
量を測定する。電位化放射線によって物質に与える単位質量当たりのエネルギーが1キログラム当たり1
&%Joule である場合に送達される吸収線量とほぼ等しい。　&%Gray = J/kg = m^2*s^(-2)。")
(documentation Sievert JapaneseLanguage "SI用量相当量測定。シンボル: Sv。これは、電分放射線の
生物学的線量の単位である。&%Sievert は異なるタイプの放射線量の正規化を可能にする。電歳化放射線の
相対的な生物学的有効性を考慮に入れるのは、そのような放射線の各形態(例えば、X線、γ線、中性子)が、
所定の吸収された線量に対して生体組織にわずかに異なる影響を及ぼすからである。所定のタイプの放射線
(&%Sievert 内) に相当する線量、&%Gray の放射線の線量に、放射線の相対的な生物学的有効性に基づく品
質因子を掛けたものである。同様に、1つの　&%Sievert は、一般に、ガンマ放射線の1 &%Gray に対する生物
学的有効性にほぼ等しい放射線量として定義される。&%Sievert = J/kg = m^2*s^(-2)。")
(documentation DayDuration JapaneseLanguage "時間単位。1 日 = 24 時間。")
(documentation HourDuration JapaneseLanguage "時間単位。1時間 = 60分。")
(documentation MinuteDuration JapaneseLanguage "時間単位。1分 = 60秒。 ")
(documentation WeekDuration JapaneseLanguage "時間単位。 1週間の期間は7日間。")
(documentation MonthDuration JapaneseLanguage "時間単位。1 か月の期間は、少なくとも 28 日、
31 日以内である。注：他のほとんどの単位とは異なり、正確な量ではなく範囲である。")
(documentation YearDuration JapaneseLanguage "時間単位。1 暦年。1 年 = 365 日 = 31536000 秒。")
(documentation Amu JapaneseLanguage "原子質量単位。シンボル:u。これは、炭素12同位素の原子の12
番目の部分の質量である。")
(documentation ElectronVolt JapaneseLanguage "&%エレクトロンボルトはエネルギー測定である。
シンボル:eV。これは、真空中で &%Volt の電位差を通過する際に電子によって得られる運動エネルギーであ
る。")
(documentation Angstrom JapaneseLanguage "&%Angstrom は、&%LengthMeasure である。
1 &%Angstrom = 10^(-10) m")
(documentation FootLength JapaneseLanguage "英国でのフィートの長さの単位。")
(documentation Inch JapaneseLanguage "英国でのインチの長さの単位。")
(documentation Mile JapaneseLanguage "英国でのマイルの長さの単位。")
(documentation UnitedStatesGallon JapaneseLanguage "米国で一般的に使用されるボリュームの単
位。")
(documentation Quart JapaneseLanguage "英語のボリューム単位は　&%UnitedStatesGallon の1/4に
等しい。")
(documentation Pint JapaneseLanguage "英国のボリュームの英語単位は &%Quart の1/2に等しい。")
(documentation Cup JapaneseLanguage "英国のボリュームの単位は &%Pint の1/2に等しい。")
(documentation Ounce JapaneseLanguage "英国の容積単位は、&%Cup の1/8に相当する。")
(documentation UnitedKingdomGallon JapaneseLanguage "英国で一般的に使用されるボリュームの単
位。")
(documentation AtomGram JapaneseLanguage "&%MassMeasure は、グラム原子とも呼ばれる。純物質の
1 &%Mole のグラムの質量として定義される。例：炭素12の1 &%AtomGram は純炭素12の12 &%Gram となる。
同じ物質の2 &%AtomGram はそれの24 &%Gram になる。これは、実際の値(すなわち、グラムで測定される
「もの」の本質的に1 M であるというというという珍しい単位である。(例：質量)は物質の種類によって異な
る。")
(documentation Kilogram JapaneseLanguage "&%Gram の超多重項。シンボル: kg。1 &%Kilogram =
1000 Grams。")
(documentation weight JapaneseLanguage "(&%weight ?O ?MM) とは、地球上で &%SelfConnectedObject
 ?O が重量?MMを持っていることを意味する。")
(documentation PoundMass JapaneseLanguage "英国の質量単位ポンド。")
(documentation Slug JapaneseLanguage "スラグの英語の質量単位。")
(documentation RankineDegree JapaneseLanguage "&%TemperatureMeasure。　注： 0 &%RankineDegree
は絶対零度 (つまり、0 &%KelvinDegrees)。")
(documentation FahrenheitDegree JapaneseLanguage "&%UnitOfTemperature は、米国で一般的に使用
されている。華氏スケールでは、水の凍結点は３２ &%FahrenheitDegree であり、水の沸点は ２１２
&%FahrenheitDegrees である。")
(documentation PoundForce JapaneseLanguage "イギリスの重量ポンド。変換係数は、重力加速度のロー
カル値に依存する。平均値は、この定数に関連付けられた変換公理で使用される。")
(documentation Calorie JapaneseLanguage "&%Calorie は、エネルギー対策である。")
(documentation BritishThermalUnit JapaneseLanguage "エネルギー対策。")
(documentation AngularDegree JapaneseLanguage "平面角度メジャー。")
(documentation UnitedStatesDollar JapaneseLanguage "通貨メジャー。")
(documentation UnitedStatesCent JapaneseLanguage "通貨メジャー。１ &%UnitedStatesCent  は
.01 &%UnitedStatesDollar に等しい。")
(documentation EuroDollar JapaneseLanguage "ほとんどの欧州連合諸国の通貨指標。")
(documentation EuroCent JapaneseLanguage "通貨メジャー。 １ &%EuroCent は .01 &%EuroDollar
と等しくなる。")
(documentation InformationMeasure JapaneseLanguage "情報量の測定。　&%Bit、&%Byte、お
よびこれらの倍数が含まれる。 例：&%KiloByte と &%MegaByte。")
(documentation Bit JapaneseLanguage "情報の１ &%Bit。 １または ０。")
(documentation Byte JapaneseLanguage "１ &%Byte の情報。 &%Byte は８ &%Bit である。")
(documentation KiloByte JapaneseLanguage "1 &%KiloByte (KB) の情報。 １ &%KiloByte は
１０２４ &%Byte。　注：この「キロ」の感覚は、SI システムで受け入れられるものとは異なる。")
(documentation MegaByte JapaneseLanguage "１ &%MegaByte (MB) の情報。１ &%MegaByte は
１０２４ KB です。注：この「メガ」の感覚は、SIシステムで受け入れられるものとは異なる。")
(documentation measure JapaneseLanguage "非常に一般的な &%Predicate は、特定の &%Object が特
定の &%PhysicalQuantity によって測定されると主張する。　一般に、この &%Predicate の第2の引数は、
&%Function &%MeasureFn で生成される用語になる。")
(documentation age JapaneseLanguage "単に &%Object の年齢を指定する &%ConstantQuantity に
&%Object を関連付ける。")
(documentation linearExtent JapaneseLanguage "&%BinaryPredicate は、表面に沿ってある点から別
の点までの０のメジャーを表すために使用される。注：述語 &%length と &%distance の違いは、&%length
が単一のオブジェクトのディメンションの１つの &%LengthMeasure を表すのに使用され、&%distance が
使用される点である。")
(documentation width JapaneseLanguage "&%BinaryPredicate は、最も広いスパンで &%Object のメ
ジャーを左右に述えるために使用される。")
(documentation height JapaneseLanguage "&%Object の高さは、その &%top と &%bottom の間の距離
である。")
(documentation length JapaneseLanguage "&%BinaryPredicate は、最も長いスパンに沿って &%Object
のメジャーを述べるために使用される。")
(documentation Oval JapaneseLanguage "&%ClosedTwoDimensionalFigure のクラスは、&%Cone と
&%ClosedTwoDimensionalFigure の交点によって生成される。")
(documentation Circle JapaneseLanguage "&%Oval のクラスは、 &%Circle を構成するすべてのGPが、
&%Circle の中心として知られている単一の &%GeometricPoint から等距離である。")
(documentation CenterOfCircleFn JapaneseLanguage "(CenterOfCircleFn ?CIRCLE)は、&%Circle
?CIRCLEの中心である &%GeometricPoint を示す。")
(documentation radius JapaneseLanguage "(&%radius ?CIRCLE ?LENGTH) は、&%Circle ?CIRCLEの半径
が ?LENGTHの長さを有することを意味する。")
(documentation diameter JapaneseLanguage "(&%diameter ?CIRCLE ?LENGTH) とは、&%Circle
?CIRCLEの直径が ?LENGTH の長さを有することを意味する。")
(documentation distance JapaneseLanguage "(&%distance ?OBJ1 ?OBJ2 ?QUANT) とは、２つのオブ
ジェクト ?OBJ1と ?OBJ2の間の最短距離が ?QUANであることを意味する。注：述語 &%length と &%distance
の違いは、&%length が単一のオブジェクトの次元の１つの &%LengthMeasure を表すために使用され、
&%distance は２つの異なるオブジェクトを区切る &%LengthMeasure を示すために使用される点である。")
(documentation altitude JapaneseLanguage "&%TernaryPredicate は、&%Object の &%top と
&%Object の &%top より下にある別の点との間の &%distance を述えるために使用される(多くの場合、
この他のポイントは海面になる)。注：この &%Predicate を使用して、例えば、地理的フィーチャの高さを
指定できる。例：山、航空機の高度、地球周りの衛星の軌道。")
(documentation depth JapaneseLanguage "&%TernaryPredicate は、&%Object の  &%top と &%Object
の &%top の上にある別の点との間の &%distance を示すために使用される (多くの場合、この他のポイン
トは海面になる)。注：この &%Predicate は、例えば、海洋生物や潜水艦の深さを指定するために使用でき
る。")
(documentation larger JapaneseLanguage "(&%larger ?OBJ1 ?OBJ2) とは、?OBJ1 が ?OBJ2よりも
すべての &%LengthMeasure に対して大きいことを意味する。")
(documentation smaller JapaneseLanguage "(&%smaller ?OBJ1 ?OBJ2) とは、?OBJ1 が ?OBJ2 より
もすべての &%LengthMeasure に対して小さいことを意味する。")
(documentation monetaryValue JapaneseLanguage "&%BinaryPredicate は、&%Object または
&%Process を &%CurrencyMeasure のインスタンスとして表される値に関連付ける。")
(documentation WealthFn JapaneseLanguage "&%UnaryFunction は、&%Agent を &%Agent が所有する
プロパティの値を指定する &%CurrencyMeasure にマップする。注：この &%Function は一般に &%Function
&%PropertyFn と組み合わせて使用される。例：(&%WealthFn (&%PropertyFn BillGates)) は、ビル・ゲ
イツの保有額の金額を返す。")
(documentation barometricPressure JapaneseLanguage "(&%barometricPressure ?AREA ?PRESSURE)
とは、 ?AREAで測定される大気圧はPであることを意味する。気圧は通常、&%InchMercury または
&%MmMercury の単位で表される。例：標準の海面圧力は水銀の 29.92 インチ (760 mm) :
(&%barometricPressure &%SeaLevel (&%MeasureFn 29.92 &%InchMercury))。")
(documentation UnitOfAtmosphericPressure JapaneseLanguage "&%UnitOfAtmosphericPressure
には、大気圧 (&%barometricPressure) の測定に使用される &%UnitOfMeasure のインスタンス(例えば
&%InchMercury)が含まれる。")
(documentation InchMercury JapaneseLanguage "&%InchMercury は、&%barometricPressure のため
の　&%UnitOfMeasure で、周囲の気圧によって水銀気圧計で支持される水銀のインチ数を表すために使用さ
れる。")
(documentation MmMercury JapaneseLanguage "&%MmMercury は、&%barometricPressure のための　
&%UnitOfMeasure で、周囲の気圧によって水銀気圧計で支持される水銀のミリメートル数を表すために使用
される。")
(documentation PositiveInfinity JapaneseLanguage "The &%TimePoint は、すべての他の　
&%TimePoints の後である。")
(documentation NegativeInfinity JapaneseLanguage "&%TimePoint は、他のすべての &%TimePoint
の前にある。")
(documentation duration JapaneseLanguage "(&%duration ?POS ?TIME) とは、&%TimePosition ?POS
の持続時間が ?TIME という意味である。　注：この &%Predicate は、&%Function &%WhenFn と組み合わせ
て使用し、&%Predicate の任意のインスタンスの継続時間を指定できる。")
(documentation frequency JapaneseLanguage "(&%frequency ?PROC ?TIME) とは、&%Process の
?PROC型が ?TIMEの間隔ごとに繰り返し発生することを意味する。")
(documentation temporalPart JapaneseLanguage "空間 &%part 述部の時間アナログ。(&%temporalPart
?POS1 ?POS2) とは、&%TimePosition ?POS1が &%TimePosition ?POS2 の一部であることを意味する。
注：&%temporalPart はすべての &%TimePostion の &%ReflexiveRelation であるため、それ自体の
&%TimePostion である。")
(documentation BeginFn JapaneseLanguage "&%UnaryFunction は &%TimeInterval を 間隔が開始され
る &%TimePoint にマップする。")
(documentation EndFn JapaneseLanguage "&%UnaryFunction は、&%TimeInterval を間隔が終了する
&%TimePoint にマップする。")
(documentation starts JapaneseLanguage "(&%starts ?INTERVAL1 ?INTERVAL2) とは、?INTERVAL1
と ?INTERVAL2 が両方とも同じ初期 &%TimePoint を持つ &%TimeInterva であり、?INTERVAL1 が
?INTERVAL2 より前に終了することを意味する。")
(documentation finishes JapaneseLanguage "(&%finishes ?INTERVAL1 ?INTERVAL2) とは、?INTERVAL1
と ?INTERVAL2が両方とも同じ末な &%TimePoint を持つ &%TimeInterval であり、?INTERVAL2 が
?INTERVAL1より前に開始することを意味する。")
(documentation before JapaneseLanguage "(&%before ?POINT1 ?POINT2) とは、?POINT1が、ユニ
バーサルタイムラインで ?POINT2に先行する、という意味である。")
(documentation beforeOrEqual JapaneseLanguage "(&%beforeOrEqual ?POINT1 ?POINT2) とは、
?POINT1 が ?POINT2 と同一であるか、ユニバーサル タイムライン上で発生する前に発生することを意味
する。")
(documentation temporallyBetween JapaneseLanguage "(&%temporallyBetween ?POINT1 ?POINT2
?POINT3) とは、&%TimePoint ?POINT2 が &%TimePoint ?POINT1 と ?POINT3の間にあることを意味す
る。")
(documentation temporallyBetweenOrEqual JapaneseLanguage "(&%temporallyBetweenOrEqual
?POINT1 ?POINT2 ?POINT3) とは、&%TimePoint ?POINT1 が &%TimePoint ?POINT2 の前または同等であ
ることを意味し、?POINT2 は &%TimePoint ?POINT3 の前または同等である。")
(documentation overlapsTemporally JapaneseLanguage "(&%overlapsTemporally ?INTERVAL1
?INTERVAL2) とは、&%TimeIntervals ?INTERVAL1 と ?INTERVAL2 が共通の部分として &%TimeInterval
を持っていることを意味する。")
(documentation during JapaneseLanguage "(&%during ?INTERVAL1 ?INTERVAL2) とは、?INTERVAL1が
?INTERVAL2の後に始まり、?INTERVAL2の前に終了することを意味する。")
(documentation meetsTemporally JapaneseLanguage "(&%meetsTemporally ?INTERVAL1 ?INTERVAL2)
とは、&%TimeInterval ?INTERVAL1 の端子点が &%TimeInterval ?INTERVAL2 の初期点であることを意味
する。")
(documentation earlier JapaneseLanguage "(&%earlier ?INTERVAL1 ?INTERVAL2) とは、&%TimeInterval
?INTERVAL2 が開始される前に &%TimeInterval ?INTERVAL1 が終了することを意味する。")
(documentation cooccur JapaneseLanguage "(&%cooccur ?THING1 ?THING2)とは、&%Object または
&%Process ?THING1 が &%Object または &%Process ?THING2 と同時に起こることを意味し、これは次の
時間的関係をカバーする: 共に同時発生する。")
(documentation TimeIntervalFn JapaneseLanguage "&%BinaryFunction は、引数として２つの
&%TimePoint を受け取り、これら２つの &%TimePoint によって定義された &%TimeInterval を返す。
最初の &%TimePoint は、２番目の &%TimePoint より前に発生する必要がある。")
(documentation RecurrentTimeIntervalFn JapaneseLanguage "定期的な時間間隔の生成に役立つ関数。
例えば、(&%RecurrentTimeIntervalFn (&%HourFn 6 &%Day)(&%HourFn 12 &%Day)) は、午前６時に始まり、
正午１２時に終了する &%TimeInterval の &%Class を返す。　別の例として、(&%RecurrentTimeInterval
&%Saturday &%Sunday) はすべての週末の &%Class を返す。さらに別の例では、(&%RecurrentTimeInterval
&%June &%August) は、アカデミックサマー期間を含む &%Class を返す。")
(documentation WhenFn JapaneseLanguage "&%UnaryFunction は、&%Object または &%Process が存在
する正確な &%TimeInterval にマップされる。　注：%TimeInterval の外側のすべての &%TimeInterval
(WhenFn ?THING) では、(時間 ?THING ?TIME) は保持されない。")
(documentation PastFn JapaneseLanguage "&%UnaryFunction は、&%TimePosition を &%TimeInterval
にマッピングし、&%NegativeInfinity で始まる。")
(documentation ImmediatePastFn JapaneseLanguage "&%UnaryFunction は、&%TimePosition を　
&%TimePosition の直前にある短い不確定 &%TimeInterval にマップする。")
(documentation FutureFn JapaneseLanguage "&%UnaryFunction は、&%PositiveInfinity で満たして
終了する　&%TimePosition をマップする。")
(documentation ImmediateFutureFn JapaneseLanguage "&%UnaryFunction は、&%TimePosition を、
&%TimePosition の直後に続く短い不確定 &%TimeInterval にマップする。")
(documentation date JapaneseLanguage "&%BinaryPredicate は、特定の O または P に対して、１日
の解像度で、絶対暦時間に &%TimePosition を指定する。")
(documentation YearFn JapaneseLanguage "&%UnaryFunction は、数値を対応するカレンダー &%Year
にマップする。 注：(&%YearFn 1912) は、１９１２年の１つのインスタンスだけを含む &%Class を返
す。予想どおり、正の整数は西暦紀元に年を返し、負の整数は紀元前に年を返す。この関数は値として
&%Class を返す。　この理由は、関連する関数 viz である。&%MonthFn、&%DayFn、&%HourFn、&%MinuteFn、
および &%SecondFn は、特定の &%TimeInterval と反復間隔の両方を生成するために使用され、これを行う
唯一の方法は、個々別々ではなく、これらの関数クラスのドメインと範囲を作成することである。")
(documentation MonthFn JapaneseLanguage "&%BinaryFunction は、%Month のサブクラスと &%Year
のサブクラスを、その &%Year に対応する &%Month を含むクラスにマップする。　例えば　(&%MonthFn
&%August (&%YearFn 1912))は、第８ &%Month、すなわち &%Year １９１２の８月である。　別の例では、
(&%MonthFn &%August &%Year) は8月のすべての月のクラスである　&%August に等しい。　注：この関数は
値として &%Class を返す。この理由は、関連する関数 viz である。DayFn、HourFn、MinuteFn、および
SecondFnは、特定の &%TimeInterval と繰り返し間隔の両方を生成するために使用され、これを行う唯一の
方法は、個々別々ではなく、これらの関数クラスのドメインと範囲を作ることである。")
(documentation DayFn JapaneseLanguage "&%BinaryFunction は、&%PositiveRealNumber と &%Month
のサブクラスを、その &%PositiveRealNumber に対応する各 &%Month 内の &%Day に割り当てる。例えば、
(&%DayFn 16 &%August) は８月のすべての１６日間の &%Class である。別の例として、(&%DayFn 9
&%Month) は、任意の月のすべての９日間のクラスを返す。さらに別の例については、 (&%DayFn
18(&%MonthFn &%August (&%YearFn 1912))) は１９１２年８月１８日を示す。")
(documentation HourFn JapaneseLanguage "&%BinaryFunction は、その &%NonnegativeInteger に
対応する各 &%Day 内の &%Hour に &%PositiveRealNumber と &%Day のサブクラスを割り当てる。例え
ば、(&%HourFn 12 &%Thursday) は木曜日の正午のすべてのインスタンスの &%Class である。別の例では、
(&%HourFn 0 &%Day) は午前零時のすべてのインスタンスのクラスを返す。さらに別の例については、
(&%HourFn 14(&%DayFn 18 (&%MonthFn &%August (&%YearFn 1912)))) は、１９１２年８月１８日の
午後２時を示す。")
(documentation MinuteFn JapaneseLanguage "&%BinaryFunction は、&%PositiveRealNumber と &%Hour
のサブクラスを、その &%NonnegativeInteger に対応する各 &%Hour 内の &%Minute に割り当てる。例え
ば、(&%MinuteFn 30 (&%HourFn 17 &%Day)) は、午後の全5:30の &%Class である。別の例として、
(&%MinuteFn 15 &%Hour) は、1 時間を過ぎた四半期のすべてのインスタンスのクラスを返す。さらに別
の例として、(&%MinuteFn 15 (&%HourFn 14 (&%DayFn 18 (&%MonthFn &%August (&%YearFn 1912)))))
は、１９１２年８月１８日の午後２時以降の１５分後を示す。")
(documentation SecondFn JapaneseLanguage "&%BinaryFunction は、&%PositiveRealNumber と
&%Minute のサブクラスを、その &%PositiveRealNumber に対応する各 &%Minute 内の &%Second に割り
当てる。例えば、(&%SecondFn 4 (&%MinuteFn 5 &%Hour)) とは、&%Class の　毎時間の毎５ &%Minute
時の毎全4 &%Second である。別の例では、(&%SecondFn 8 &%Minute) は毎分８秒時を返す。さらに別の
例として、(&%SecondFn 9 (&%MinuteFn 15 (&%HourFn 14 (&%DayFn 18 (&%MonthFn &%August
(&%YearFn 1912)))))) とは、１９１２年８月１８日の午後２時以降９秒１５分を示す。")
(documentation Year JapaneseLanguage "すべてのカレンダー &%Year の &%Class。")
(documentation Decade JapaneseLanguage "すべてのカレンダー &%Decade の &%Class。")
(documentation MorningFn JapaneseLanguage "&%UnaryFunction は、与えられた &%Day の &%Morning
のクラスを返す。")
(documentation AfternoonFn JapaneseLanguage "&%UnaryFunction は、与えられた &%Day の
&%Afternoon のクラスを返す。")
(documentation Noon JapaneseLanguage "正午にあるすべての &%TimePoint のクラス。")
(documentation Evening JapaneseLanguage "Af の終わりである &%Sunset で始まり、午前零時に終わる
&%TimeInterval のクラス。")
(documentation EveningFn JapaneseLanguage "&%UnaryFunction は、指定された &%Day の &%Evening
のクラスを返す。")
(documentation WeekFn JapaneseLanguage "&%BinaryFunction は、&%PositiveRealNumber と &%Year
のサブクラスを、その &%PositiveRealNumber に対応する各 &%Year 内の &%Week に割り当てる。例えば、
(&%WeekFn 4 (&%YearFn 1999)) は、&%Year １９９９の全第４ &%Week の単数 &%Class である。")
(documentation QuarterFn JapaneseLanguage "&%BinaryFunction は、&%PositiveRealNumber および
その &%PositiveRealNumber に対応する各 &%Year 内の %Quarter に対する &%Year のサブクラス。例え
ば、(&%QuarterFn 4 (&%YearFn 1999)) は、&%Year １９９９の最後の &%QuarterYear  の単数形 &%Class
である。")
(documentation QuarterYear JapaneseLanguage "３ヶ月の期間。")
(documentation LeapYear JapaneseLanguage "すべてのうるう年の &%Class 。これらは、(i.)１００
ではなく４で均等に割り切れる年か、または(ii.)400によって均等に割り切れる(この後者の場合はうるう
世紀として知られている)。")
(documentation successorClass JapaneseLanguage "次のクラスは、曜日などのクラスのシーケンスであ
る。最初の引数は、２番目の引数の 「前」 である。")
(documentation Month JapaneseLanguage "すべてのカレンダー &%Month の &%Class。")
(documentation January JapaneseLanguage "１月のすべての &%Month の &%Class。")
(documentation February JapaneseLanguage "２月のすべての &%Month の &%Class。")
(documentation March JapaneseLanguage "３月のすべての &%Month の &%Class。")
(documentation April JapaneseLanguage "４月のすべての &%Month の &%Class。")
(documentation May JapaneseLanguage "５月のすべての &%Month の &%Class。")
(documentation June JapaneseLanguage "６月のすべての &%Month の &%Class。")
(documentation July JapaneseLanguage "７月のすべての &%Month の &%Class。")
(documentation August JapaneseLanguage "８月のすべての &%Month の &%Class。")
(documentation September JapaneseLanguage "９月のすべての &%Month の &%Class。")
(documentation October JapaneseLanguage "１０月のすべての &%Month の &%Class。")
(documentation November JapaneseLanguage "１１月のすべての &%Month の &%Class。")
(documentation December JapaneseLanguage "１２月のすべての &%Month の &%Class。")
(documentation Day JapaneseLanguage "すべてのカレンダー &%Day の &%Class。")
(documentation Monday JapaneseLanguage "すべてのカレンダー月曜日の &%Class。")
(documentation Tuesday JapaneseLanguage "すべてのカレンダー火曜日の &%Class。")
(documentation Wednesday JapaneseLanguage "すべてのカレンダー水曜日の &%Class。")
(documentation Thursday JapaneseLanguage "すべてのカレンダー木曜日の &%Class。")
(documentation Friday JapaneseLanguage "すべてのカレンダー金曜日の &%Class。")
(documentation Saturday JapaneseLanguage "すべてのカレンダー土曜日の &%Class。")
(documentation Sunday JapaneseLanguage "すべてのカレンダー日曜日の &%Class。")
(documentation Week JapaneseLanguage "すべてのカレンダー週の &%Class。")
(documentation Hour JapaneseLanguage "すべての丸々 &%Hour の　&%Class。")
(documentation Minute JapaneseLanguage "すべての丸々 &%Minute の　&%Class。")
(documentation Second JapaneseLanguage "すべての丸々 &%Second の　&%Class。")
(documentation TemporalCompositionFn JapaneseLanguage "より小さい %TimeInterval から大きな
%TimeInterval の組成を表現するための基本的な &%Function。例えば、&%ThisSeptember が &%September
の &%instance である場合、(&%TemporalCompositionFn &%ThisSeptember &%Day) は &%ThisSeptember
を構成する連続した日数の &%Class を示す。 注：関数 &%CardinalityFn を使用して、この &%Class の
インスタンス数を取得できる。")
(documentation connected JapaneseLanguage "(connected ?OBJ1 ?OBJ2) とは、?OBJ1
&%meetsSpatially ?OBJ2または ?OBJ1 &%overlapsSpatially ?OBJ2 という意味である。")
(documentation connects JapaneseLanguage "３つの物事の関係は、３つのうちの１つが他の２つを接続
するときである。より正式には、(&%connects ?OBJ1 ?OBJ2 ?OBJ3) とは、 (&%connected ?OBJ1 ?OBJ2)
および (&%connected ?OBJ1 ?OBJ3) で、(&%connected ?OBJ2 ?OBJ3) ではない、という意味である。")
(documentation meetsSpatially JapaneseLanguage "(&%meetsSpatially ?OBJ1 ?OBJ2) とは、?OBJ1
と ?OBJ2 は &%connected だが、?OBJ1 も ?OBJ2 も &%overlapsSpatially ではないという意味であ
る。")
(documentation overlapsSpatially JapaneseLanguage "(&%overlapsSpatially ?OBJ1 ?OBJ2) とは、
&%Objects ?OBJ1 と ?OBJ2 に共通の部分があることを意味する。これは、反射的で対称的な (ただし推移的
ではない) 関係である。")
(documentation overlapsPartially JapaneseLanguage "(&%overlapsPartially ?OBJ1 ?OBJ2) とは、
?OBJ1 と ?OBJ2 には共通の部分があるが、?OBJ1 も ?OBJ2 も他の  &%part ではない。")
(documentation superficialPart JapaneseLanguage "(&%superficialPart ?OBJ1 ?OBJ2) とは、
?OBJ1 は ?OBJ2 の内部部分を持たない部分という意味である。 (または、直感的には、?OBJ2 の単なる補数
と外部的に接続されている ?OBJ2 の部分としか重なっていない)。これも &%MereologicalSumFn と
&%MereologicalProductFn 下の閉ざされた推移的な関係である。")
 (documentation surface JapaneseLanguage "(&%surface ?OBJ1 ?OBJ2) とは、?OBJ1 が ?OBJ2 の
 最大接続 &%superficialPart であることを意味する。　注：一部の &%SelfConnectedObjects には複数
 の表面がある。例：テニスボールのような中空の物体は、内側と外側の両方の面を持っている。")
(documentation interiorPart JapaneseLanguage "(&%interiorPart ?OBJ1 ?OBJ2) とは、?OBJ1が
?OBJ2の部分であり、?OBJ1 と &%superficialPart ?OBJ2 の間に重複がないことを意味する。")
 (documentation bottom JapaneseLanguage "(&%bottom ?BOTTOM ?OBJECT) は、?BOTTOM  が ?OBJECT
 の最も低い部分または最も深い表面的な部分である場合、保持される。")
(documentation top JapaneseLanguage "(&%top ?TOP ?OBJECT) とは、?TOP が ?OBJECT の最も高い
表面的な部分であることを意味する。")
(documentation side JapaneseLanguage "(&%side ?SIDE ?OBJECT) とは、?SIDE が &%top または
%bottom ではなくオブジェクトの側であることを意味する。")
(documentation MereologicalSumFn JapaneseLanguage "(&%MereologicalSumFn ?OBJ1 ?OBJ2) は、
?OBJ1 または ?OBJ2 のいずれかに属するパーツから成る &%Objectを示す。")
(documentation MereologicalProductFn JapaneseLanguage "(&%MereologicalProductFn ?OBJ1
?OBJ2) は、?OBJ1 と ?OBJ2 の両方に属するパーツからなる &%Object を示す。")
(documentation MereologicalDifferenceFn JapaneseLanguage "(&%MereologicalDifferenceFn ?OBJ1
?OBJ2) は、?OBJ2 ではなく ?OBJ1 に属するパーツで構成される &%Object を示す。")
(documentation hole JapaneseLanguage "(&%hole ?HOLE ?OBJ) とは、&%Hole が ?OBJ の &%Hole で
あることを意味する。&%Hole は、&%surface &%Object に位置する書き込み可能なボディである。")
(documentation Hole JapaneseLanguage "ホールは、&%Object の表面に位置する重要でないボディであ
る。すべての &%Hole は、そのホスト主(すなわち、それがホールであるオブジェクト)に依存しているので、
&%Hole は何かの中で &%hole であると定義される。注：２つの &%Hole は、パーツを共有せずに、同じ領域
または同じ領域の一部を占有する場合がある。ホールの任意の２つのホストは、完全にホールをホストする共通
の適切な部分を持ってる。２つのホールの共通ホストは、それらのホールの合計のすべての部分をホストする。
ホールのホストを含むオブジェクトは、その部分がまさにそのホールの一部として含まれていない限り、その
ホールのホストである。重なり合うホールには、ホストが重なり合う。ホールは原子ではないホールはホスト
と接続されている。ホール自体とまったく同じものに外部的に接続されている適切な部分を持つホールはな
い。")
(documentation HoleHostFn JapaneseLanguage "A &%UnaryFunction は、&%Hole を主ホストである
&%Object にマップする。&%Hole の原理ホストは、その最大に接続されたホストである (引数がホールである
場合にのみ定義される概念)。")
(documentation Fillable JapaneseLanguage "何か他のもので満たすことができる場合は、何かが
&%Fillable である。注：ここで「充填」は完全に充填されたことを意味する。何かがホールの一部である場
合に備えて充填可能であり、すなわち、充填性はホールとその部分の排他的な特性である。")
(documentation partiallyFills JapaneseLanguage "(&%partiallyFills ?OBJ ?HOLE) は、?OBJ
が ?HOLE の一部を &%completelyFills ことを意味する。注１：(&%partiallyFills ?OBJ1 ?HOLE) およ
び (&%part ?OBJ1 ?OBJ2) の場合、(&%partiallyFills ?OBJ2 ?HOLE) である。 注２：部分的なフィラー
が完全にホールの中にある必要はない。(突き出る可能性有)。これはすべての完全なフィラーも部分的なもの
と見なされることを意味する(リミットケース)。")
(documentation properlyFills JapaneseLanguage "(&%properlyFills ?OBJ ?HOLE) は、?HOLE が
?OBJ によって適切に(おそらく不完全であるが)満たされていることを意味する。例：?HOLE の一部は、?OBJ
によって完全に満たされている。注：&%properlyFills は &%completelyFills のデュアルであるため、
?OBJ が &%properlyFills ?HOLE の　&%partiallyFills に関連している。それは ?OBJ が ?HOLE のすべ
ての部分を &%partiallyFills する場合に備えている。(したがって、すべての完璧なフィラーは、この意味
で完全かつ適切である)。すべてのホールは、ホールの適切なフィラーが接続されているすべてのものに接続さ
れている。ホールの完全なフィラーのすべての適切な部分は、そのホールを適切に埋める(その一部)。")
(documentation completelyFills JapaneseLanguage "(&%completelyFills ?OBJ ?HOLE) は、&%Object
?OBJ の &%part が &%Hole ?HOLE を埋めることを意味する。注：(&%completelyFills ?OBJ1 ?HOLE) お
よび (&%part ?OBJ1 ?OBJ2) の場合、(&%completelyFills ?OBJ2 ?HOLE) である。　ホールの完全な
フィラー、ホール自体が接続されているすべてのものに接続される。ホールの完全なフィラーは、そのホール
の(その部分の)すべての適切な部分を完全に埋める。")
(documentation fills JapaneseLanguage "ホールを埋めることができる。(&%fills ?OBJ ?HOLE) は、
&%Object ?OBJ が &%Hole ?HOLEを埋めるということを意味する。注：ここで &%fills は完全に満たされ
たことを意味する。完全なフィラーと充填可能なエンティティには、共通の部分がない(むしろ、同じ空間領域
を占有する場合がある)。")
(documentation HoleSkinFn JapaneseLanguage "A &%UnaryFunction は、&%Hole を &%Hole のスキン
にマッピングする。&%Hole のスキンは、&%Hole が外部に接続されている &%Hole の主ホスト
(&%superficialPart を参照)の表面的な部分(&%HoleHostFn を参照)の融合である。")
(documentation subProcess JapaneseLanguage "(&%subProcess ?SUBPROC ?PROC) は、?SUBPROC が
?PROC のサブプロセスであることを意味する。サブプロセスは、 &%Process の一時的に区別された部分(適切
かどうか)として理解されている。")
(documentation BiologicalProcess JapaneseLanguage "&%Process は、&%Organism に組み込まれて
いる。")
(documentation PhysiologicProcess JapaneseLanguage "&%Organism または &%Organism の一部の通
常のプロセス。")
(documentation AutonomicProcess JapaneseLanguage "&%PhysiologicProcesses のクラスは、意識的
な認識と制御がない。")
(documentation OrganOrTissueProcess JapaneseLanguage "特定の &%Organ または &%Tissue の
&%PhysiologicProcess。")
(documentation OrganismProcess JapaneseLanguage "複数の臓器系または複数の &%Organ または
&%Tissue の &%Organism 全体の生理学的機能。")
(documentation Birth JapaneseLanguage "&%Process の誕生。")
(documentation Death JapaneseLanguage "死ぬ &%Process。")
(documentation Breathing JapaneseLanguage "呼吸の &%Process  は、酸素が &%Animal に利用可能に
なる。これは、吸入、呼気、およびその２間の交互のプロセスをカバーしている。")
(documentation Ingesting JapaneseLanguage "食べ物が &%Animal へ持ち込まれる &%Process。")
(documentation Eating JapaneseLanguage "固形食品が &%Animal に組み込まれる &%Process。")
(documentation Drinking JapaneseLanguage "流動食、つまり &%Beverages は、&%Animal に組み込ま
れている。")
(documentation Digesting JapaneseLanguage "摂取された &%Food をより単純な化学化合物に分解し、
&%Organism によって吸収される &%Process。")
(documentation Growth JapaneseLanguage "&%Organism または &%Organism の一部が、その形式または
サイズを変更する生物学的開発の &%Process。")
(documentation Replication JapaneseLanguage "生物学的生殖の &%Process 。これは性的または無性の
プロセスのいずれかである。")
(documentation SexualReproduction JapaneseLanguage "生物学的生殖の性的 &%Processes。")
(documentation AsexualReproduction JapaneseLanguage "生物学的生殖の無性 &%Processes 。")
(documentation PsychologicalProcess JapaneseLanguage "&%BiologicalProcess は、%Organism の
心または脳で起こり、%Organism の行動に現れる可能性がある。")
(documentation PathologicProcess JapaneseLanguage "無秩序なプロセス、活動、または &%Organism
全体の状態、１つまたは複数の身体システム、または複数の &%Organs または &%Tissu。ここに含まれてい
る負の刺激だけでなく、病理学的条件や病気よりも特異的ではない状態に対する正常な応答が含まれている。
病理学的機能は、しばしば全身的な効果がある。")
(documentation Injuring JapaneseLanguage "外傷性創傷を作成するプロセスまたは損傷。 &%Injuring
は生物学的機能なしでは不可能なので負傷している生物の &%BiologicalProcess のサブクラスである。")
(documentation Poisoning JapaneseLanguage "&%Poisoning は外部物質によって引き起こされる。
&%Poisoning は、&%Organism が負傷する影響を与えるいくつかの生物学的機能なしでは不可能であるため、
&%BiologicalProcess のサブクラスである。")
(documentation NaturalProcess JapaneseLanguage "自然の中で自発的に起こる &%Process。")
(documentation IntentionalProcess JapaneseLanguage "&%Process は、それを実行する &%Agent に
対し、固有の目的を持つ。")
(documentation IntentionalPsychologicalProcess JapaneseLanguage "&%IntentionalProcess は、
&%Organism の心または脳内で完全に実現できるプロセスである。したがって、例えば、&%Reasoning は
&%IntentionalPsychologicalProcess のサブクラスである。なぜ
なら、単純に心/脳を行使するだけで推論できるからである。一方、&%RecreationOrExercise のインスタン
スの多くは必ずしも &%BodyMotion の &%subProcesses を持つため、&%RecreationOrExercise は
&%IntentionalPsychologicalProcess のサブクラスではない。")
(documentation RecreationOrExercise JapaneseLanguage "&%Process は、レクリエーションまたは
エクササイズのために実行される。よって、そのプロセスがクラスのインスタンスであるかどうかを決定する。
したがって、ジョンとビルがテレビで同じ番組を見て、ビルが教育要件を満たすためだけにそれを見ている間、
ジョンはリラックスするためにそれを見ているなら、ジョンが映画を見ることはROEのインスタンスであり、
ビルはそうではない　(両方の場合はテレビを見ている。しかし、この後者のクラスのインスタンスは意図に
よって決定されないため、プログラムは S のクラスに含まれる。)")
(documentation OrganizationalProcess JapaneseLanguage "&%Organization を含む　
&%IntentionalProcess 。")
(documentation Election JapaneseLanguage "&%Election は、資格のある参加者が役員に投票したり、
決議を採択したり、その %Organization の他の問題を解決したりする組織によって実施されるイベントのク
ラスである。")
(documentation ReligiousProcess JapaneseLanguage "&%OrganizationalProcess は、
&%ReligiousOrganization 内または &%ReligiousOrganization によって実行される。")
(documentation JoiningAnOrganization JapaneseLanguage "&%Organization の &%member になる
&%OrganizationalProcess。")
(documentation LeavingAnOrganization JapaneseLanguage "自発的か無意識かにかかわらず
&%Organization を去る &%OrganizationalProcess 。")
(documentation Graduation JapaneseLanguage "&%EducationalOrganization を卒業する
&%OrganizationalProcess 。")
(documentation Matriculation JapaneseLanguage "学生として &%EducationalOrganization に参加
する &%OrganizationalProcess 。")
(documentation Hiring JapaneseLanguage "誰かが &%Organization の従業員になる
&%OrganizationalProcesses 。")
(documentation TerminatingEmployment JapaneseLanguage "誰かが &%Organization の従業員でなく
なる &%OrganizationalProcesses。注：これは、解雇されたり、自発的に退職することをカバーする。")
(documentation PoliticalProcess JapaneseLanguage "&%OrganizationalProcess は、正式に構成さ
れた政府に対して、またはそれに対して行われる。例えば、提案された法律の投票、政府の代表者選出、革命
での政府転覆など。")
(documentation JudicialProcess JapaneseLanguage "&%JudicialOrganization によって行われる法的
手続き。注：&%LegalAction と &%JudicialProcess の概念には重要な違いがある。前者は、原告が提起し
た法的請求を指す。例：訴訟。 後者は、&%LegalAction のメリットが決定される裁判や他の種類の司法審理
を指す。")
(documentation LegalDecision JapaneseLanguage "&%LegalAction に関して裁判所が出した決定。
注：&%LegalDecision は裁判所の決定である &%Declaring の行為であり、特定の &%LegalAction のメ
リットを &%Deciding 裁判官または陪審員の行為ではない。")
(documentation MilitaryProcess JapaneseLanguage "任意の &%Process は、軍事組織によって実行さ
れる。このクラスは、慎重な計画の結果である軍事演習などの %Process と、スクリプト化されていない
%Process を対象としている。")
(documentation RegulatoryProcess JapaneseLanguage "&%Guiding の目的は、規則や規制の施行である。
注：%RegulatoryProcess と関連する概念 &%Managing には主な違いがある。後者は、単一のマネージャーと
管理されているエージェントの限られた数との間の長期的な関係を意味し、前者は規制の活動が参照される規
範的な標準を意味する。")
(documentation Managing JapaneseLanguage "他の人の活動監視を含む &%OrganizationalProcesses。
注：&%RegulatoryProcess とその兄弟 &%Managing の主な違いがある。後者は、マネージャーと管理人との
間の長期的な関係を意味し、前者は規制の活動が参照される規範的な標準を意味する。")
(documentation Planning JapaneseLanguage "一連の目標または目的を満たすために一連のアクションを
指定する。")
(documentation Designing JapaneseLanguage "&%Planning の 空間アナログ。&%Objects の
&%Collection を %Designing ことは、特定の目的を満たすために、互いに対して、そしておそらく他の
&%Object に対して &%Object の配置を決定する。")
(documentation Interpreting JapaneseLanguage "任意の &%Process は、%Text に &%Proposition を
割り当てる。すなわち、%Text を理解する。")
(documentation QuantityChange JapaneseLanguage "&%InternalChange は、&%patient に関する
&%PhysicalQuantity が変更される 。")
(documentation Increasing JapaneseLanguage "&%PhysicalQuantity が増加した任意の
&%QuantityChange。")
(documentation Heating JapaneseLanguage "&%PhysicalQuantity が 増加した %Increasing
&%Process は、&%TemperatureMeasure である。")
(documentation Decreasing JapaneseLanguage "&%PhysicalQuantity が減少した任意の
&%QuantityChange。")
(documentation Cooling JapaneseLanguage "&%PhysicalQuantity が減少した任意の &%Decreasing
&%Process は &%TemperatureMeasure である。")
(documentation moves JapaneseLanguage "(&%moves ?MOTION ?OBJECT) は、&%Motion イベントである
?MOTION 最中に?OBJECTが移動することを意味する。これは必ずしも ?OBJECT の最中に ?OBJECT の位置が
変わることを意味するわけではない。&%changesLocation および &%Translocation も参照。")
(documentation changesLocation JapaneseLanguage "(&%changesLocation ?EVENT ?OBJECT) は、
&%Translocation イベント ?EVENT の最中に ?OBJECT's 位置が変更されたことを意味する。?OBJECT は、
?EVENT の &%patient、&%experiencer、または &%experiencer でもある可能性がある。")
(documentation Motion JapaneseLanguage "任意の移動 &%Process。")
(documentation MotionUpward JapaneseLanguage "&%Object が地面から離れて移動している &%Motion
。")
(documentation MotionDownward JapaneseLanguage "&%Object が地面に向かって移動している
&%Motion。")
(documentation path JapaneseLanguage "(&%path ?MOTION ?PATH) は、?PATH が ?MOTION が発生す
るルートであることを意味する。例：高速道路 101 は、次の命題のパスである: 車で、高速道路 101 を
走らせた。")
(documentation BodyMotion JapaneseLanguage "&%agent が &%Organism で &%patient が &%BodyPart
である任意の &%Motion。")
 (documentation Speaking JapaneseLanguage "彼/彼女の声帯を含む &%Human による任意の
 &%LinguisticCommunication")
(documentation Ambulating JapaneseLanguage "ある所から別の所に移動する目的で &%Animal の脚に
よって達成される任意の &%BodyMotion。")
(documentation Walking JapaneseLanguage "&%Ambulating は、比較的ゆっくりと、すなわち少なくとも
１本の足が常に地面に接触するような方法で移動する。")
(documentation Running JapaneseLanguage "&%Ambulating は比較的迅速に、すなわち、各ステップで、
どちらの足も一定期間地面に接触しないような方法で移動する。")
(documentation Swimming JapaneseLanguage "&%Organism によって遂行される水を通して &%BodyMotion
を意図的に制御する。")
(documentation Dancing JapaneseLanguage "意図的に音楽と調整されている &%Human の任意の
&%BodyMotion。")
(documentation GeologicalProcess JapaneseLanguage "地質学的な力によって引き起こされ、地質学的
特徴に影響を与え、生物圏にも影響を与える可能性のある活動のクラス。")
(documentation WeatherProcess JapaneseLanguage "&%WeatherProcess は、気象シーズンを含む最も
広範なプロセスクラスである (&%SeasonOfYear、気象システム、短期気象イベントのインスタンスと混同し
ないよう注意)。")
(documentation Precipitation JapaneseLanguage "&%Precipitation は、液体または凍結状態のいずれ
かで、空気から地面に落下する水分子のプロセスである。")
(documentation LiquidMotion JapaneseLanguage "&%patient が &%Liquid の &%Motion。このクラス
は、特に &%Water の流れをカバーする。")
(documentation WaterMotion JapaneseLanguage "&%Liquid が &%Water である任意の &%LiquidMotion。
")
(documentation GasMotion JapaneseLanguage "&%patient  が &%Gas の任意の &%Motion。 これは、
特に &%Air の動きをカバーする、すなわち微風や風。")
(documentation Wind JapaneseLanguage "&%Air の任意の &%Motion。")
(documentation DirectionChange JapaneseLanguage "&%patient の行為が向いている方向を変える
行為。")
(documentation Transfer JapaneseLanguage "&%agent と &%patient が同じではない &%Translocation
の &%instance 。")
(documentation Carrying JapaneseLanguage "&%Animal または &%Human によってある所から別の所へ
&%Transfer 。")
(documentation Removing JapaneseLanguage "何かがある場所から取り除かれる &%Process の &%Class。
注：削除されたものと場所は、それぞれ &%CaseRoles &%patient と &%origin で指定される。")
(documentation Uncovering JapaneseLanguage "&%Removing の &%Class は、&%patient が完全に
または部分的にしか明らかにされない処理を行う。")
(documentation Putting JapaneseLanguage "何かがある場所に置かれる &%Process の &%Class 。注：
場所は &%CaseRole &%destination で指定されている。")
(documentation Covering JapaneseLanguage "&%Putting の &%Class は、&%agent が &%patient を
完全にまたは部分的にカバーする処理を行う。")
(documentation Inserting JapaneseLanguage "別のものの中に一つの物を&%Putting。")
(documentation Injecting JapaneseLanguage "&%Animal または注射器を持つ &%Human に
&%BiologicallyActiveSubstance  を &%Inserting 。")
(documentation Substituting JapaneseLanguage "１つのものを別のものに置き換える &%Transfer の
&%Class 。")
(documentation Impelling JapaneseLanguage "&%patient が突然、衝撃な出来事によって宇宙を通過す
る &%Transfer の &%subclass。例えば、射撃、物を投げたり、トスする、など。")
(documentation Shooting JapaneseLanguage "&%patient が何らかの &%DeviceD によって空中を発射
される発射物である &%Impelling の &%subclass 。")
(documentation Touching JapaneseLanguage "２つの &%Object が互いに直接物理的に接触する任意の
&%Transfer 。")
(documentation grasps JapaneseLanguage "&%Object をつかむ状態。(&%grasps ?ANIMAL ?OBJ) は、
&%Animal ?ANIMAL が意図的に &%Object ?OBJ に保持していることを意味する。")
(documentation Grabbing JapaneseLanguage "&%Touching の任意のインスタンスは、&%Touching の
&%grasp が &%patient である状況をもたらす。")
(documentation Releasing JapaneseLanguage "&%Transfer のインスタンスは、以前に &%agent
&%grasps が何かの場合ではない状況をもたらす。")
(documentation Impacting JapaneseLanguage "何かが突然、力強く、物理的に何か他のものと接触する
&%Touching。いくつかの例として、打撃、ノック、鞭打ちなど。")
(documentation Translocation JapaneseLanguage "&%Translocation は、オブジェクトがある場所から
別の場所に移動する &%Motion のクラスである。ラウンドトリップの場合、&%origin と &%destination は
同じだが、介在するモーションは他の場所を通過する。&%Translocation は、回転やその他の動きとは対照的
に、線形運動を表す。車両は必要なく、&%Ambulating は &%Translocation の一種である。")
(documentation Falling JapaneseLanguage "&%Falling は、重力の下で、より高い場所から低い位置に
何かが移動するイベントのクラスである。")
(documentation Transportation JapaneseLanguage "&%TransportationDevice を使用して、ある所か
ら別のポ所への &%Motion。")
(documentation Guiding JapaneseLanguage "%agent が &%Agent の有無にかかわらず、別の &%Object
の動作を指示しようとする &%IntentionalProcess。")
(documentation Driving JapaneseLanguage "&%Vehicle の方向や速度の制御。 これには、船の航行、
車やトラックの運転、列車の運行などが含まれる。")
(documentation EducationalProcess JapaneseLanguage "&%Learning を生じることを意図している任意
の &%Process")
(documentation ChangeOfPossession JapaneseLanguage "何かの所有権がある &%Agent から別の &%Agent
に移される &%Process の &%Clas 。")
(documentation Giving JapaneseLanguage "&%ChangeOfPossession の &%subclass は &%agent が
&%destination に何かを与える。")
(documentation Funding JapaneseLanguage "&%patient が &%Currency のインスタンスである &%Giving
のインスタンス。注：このクラスは、投資の利益の一定の割合が会社に返還される契約を持つベンチャーキャピタ
ルを持つソフトウェア会社に資金を提供する場合や、&%UnilateralGiving のインスタンスなど、両方のファ
イナンスをカバーする。例として、奨学金またはフェローシップの一環として、学生に授業料免除および/また
は給付金を提供するなど。")
(documentation UnilateralGiving JapaneseLanguage "&%Transaction の一部ではない &%Giving のイ
ンスタンス。言い換えれば、見返りに何も受け取らない &%Giving のインスタンス。&%UnilateralGiving
の例として、名誉賞、贈答品、および金銭的補助金などがある。")
(documentation Lending JapaneseLanguage "&%agent が後で返されることを期待して、限られた期間
(おそらく興味を持って) &%destination に何かを与える &%Giving &%Process の &%subclass 。")
(documentation GivingBack JapaneseLanguage "&%agent が以前に &%destination によって &%agent
に与えられた &%destination に何かを与える &%Giving のインスタンス。例えば誰かから借りた本を返却
する、など。")
(documentation Getting JapaneseLanguage "&%agent が何かを得る &%ChangeOfPossession の
&%subclass。注：何かが取得されたソースは &%origin &%CaseRole で指定さる。")
(documentation UnilateralGetting JapaneseLanguage "&%Getting  の任意のインスタンスは
&%Transaction の一部ではない。言い換えれば、&%Getting のインスタンスは、何の見返りもない。
いくつかの &%UnilateralGetting の例として、充当、指揮、盗難などが挙げられる。")
 (documentation Borrowing JapaneseLanguage "後で見返りがあることを期待して、限られた期間(おそら
 く利子を含む) 何かを得る &%Getting &%Processes  の &%subclass 。")
(documentation Transaction JapaneseLanguage "何かが他のものと交換される &%ChangeOfPossession
の &%subclass 。")
(documentation FinancialTransaction JapaneseLanguage "&%Transaction は、&%FinancialInstrument
のインスタンスがアクションの対象であり、多くの場合、他のインスタンスと交換される。")
(documentation transactionAmount JapaneseLanguage "(&%transactionAmount ?TRANSACTION
?AMOUNT) は、?AMOUNT が &%FinancialTransaction ?TRANSACTION に取り出されている
&%CurrencyMeasure のインスタンスであることを意味する。")
(documentation ServiceProcess JapaneseLanguage "&%ServiceProcess は、あるエージェントが別の
エージェントに対してサービスを実行するイベントのクラスを示す。サービスは商用である必要はなく、
&%serviceRecipient がサービスの &%serviceProvider を支払ったり補償したりする必要はない。")