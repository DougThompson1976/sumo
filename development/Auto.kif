;;
;; Auto.kif
;; Created on 30th August 2022 at CIRRC in Prague, Czechland by Jennie Pease for a project
;; to generat English sentences using SUMO
;; 
;; 1. terms in file store.txt in bAbl-tasks
              
(documentation Gettable EnglishLanguage "&%Gettable is a &%RelationalAttribute for an &%Object. It means that
it can be transferred.")
(instance Gettable RelationalAttribute)
(termFormat EnglishLanguage Gettable "gettable")
(termFormat ChineseLanguage Gettable "可獲取")
(termFormat ChineseTraditionalLanguage Gettable " 可获取")

(=>
  (and
    (instance ?O Object)
    (capability Transfer objectTransferred ?O))
  (attribute ?O Gettable))

(termFormat Englishlanguage Apple1 "apple")
(and
  (instance Apple1 Apple)
  (attribute Apple1 Gettable))

(termFormat Englishlanguage Banana1 "banana")
(and
  (instance Banana1 Banana)
  (attribute Banana1 Gettable))

(termFormat Englishlanguage Orange1 "orange")
(and
  (instance Orange1 Orange)
  (attribute Orange1 Gettable))

(termFormat Englishlanguage Pineapple1 "pineapple")  
(and
  (instance Pineapple1 Pineapple)
  (attribute Pineapple1 Gettable))

(termFormat Englishlanguage Pear1 "pear")  
(and
  (instance Pear1 Pear)
  (attribute Pear1 Gettable))

(termFormat Englishlanguage Melon1 "melon") 
(and
  (instance Melon1 Melon)
  (attribute Melon1 Gettable))
  
(exists (?box1 ?box2)
  (and
    (instance ?box1 Box)
    (instance ?box2 Box)
    (not
      (equal ?box1 ?box2))))

(termFormat Englishlanguage Crate "crate")
(instance Crate Container)

(termFormat Englishlanguage Basket1 "basket")
(instance Basket1 Basket)

(and
  (instance John Human)
  (names "John" John)
  (attribute John Actor)
  (actedIn John God)
  (attribute John Male))

(and
  (instance Mary Human)
  (names "Mary" Mary)
  (attribute Mary Actor)
  (actedIn Mary God)
  (attribute Mary Female))

(and
  (instance Sandra Human)
  (names "Sandra" Sandra)
  (attribute Sandra Actor)
  (actedIn Sandra God)
  (attribute Sandra Female))

(and
  (instance Daniel Human)
  (names "Daniel" Daniel)
  (attribute Daniel Actor)
  (actedIn Daniel God)
  (attribute Daniel Male))

;;
;; world_basic.txt
;;

(termFormat Englishlanguage Bedroom1 "bedroom")
(instance Bedroom1 Bedroom)
(instance Bedroom1 GeographicArea)

(termFormat Englishlanguage Kitchen1 "kitchen")
(instance Kitchen1 Kitchen)
(instance Kitchen1 GeographicArea)

(termFormat Englishlanguage Garden1 "garden")
(instance Garden1 Garden)

(termFormat Englishlanguage Hallway1 "hallway")
(instance Hallway1 Hallway)
(instance Hallway1 GeographicArea)

(termFormat Englishlanguage Bathroom1 "bathroom")
(instance Bathroom1 Bathroom)
(instance Bathroom1 GeographicArea)

(termFormat Englishlanguage Office "office")
(instance Office OfficeBuilding)
(instance Office GeographicArea)

(located Apple1 Kitchen1)

(termFormat Englishlanguage Football1 "football")
(and
  (instance Football1 SoccerBall)
  (attribute Football1 Gettable)
  (located Football1 Garden1))

(termFormat Englishlanguage Milk1 "milk")
(and
  (instance Milk1 Milk)
  (attribute Milk1 Gettable)
  (located Milk1 Kitchen1))

(termFormat Englishlanguage Table1 "table") 
(and
  (instance Table1 Table)
  (located Table1 Kitchen1))
 
(located John Kitchen1)

(located Mary Bedroom1)

(located Sandra Garden1)

(located Daniel Hallway1) 
  
;;
;; world_motivations.txt
;;

(termFormat Englishlanguage Pajamas1 "pajamas") 
  (and
  (instance Pajamas1 Pajamas)
  (attribute Pajamas1 Gettable)
  (located Pajamas1 Bedroom1))

(and 
  (instance Jason Human)
  (names "Jason" Jason)
  (attribute Jason Actor)
  (actedIn Jason God)
  (attribute Jason Male))

(and
  (instance Antoine Human)
  (names "Antoine" Antoine)
  (attribute Antoine Actor)
  (actedIn Antoine God)
  (attribute Antoine Female))

(and
  (instance Sumit Human)
  (names "Sumit" Sumit)
  (attribute Sumit Actor)
  (actedIn Sumit God)
  (attribute Sumit Female))

(and
  (instance Yann Human)
  (names "Yann" Yann)
  (attribute Yann Actor)
  (actedIn Yann God)
  (attribute Yann Male))

(=>
  (and
    (instance ?X Human)
    (attribute ?X Hungry)
    (holdsDuring ?TIME  
      (desires ?X
        (not
          (attribute ?X Hungry)))))
  (desires ?X
    (exists (?T)
      (and
        (instance ?T Translocation)
        (agent ?T ?X)
        (destination ?T Kitchen1)
        (during (WhenFn ?T) ?TIME)
        (hasPurpose ?T 
          (exists (?G)
            (and
              (instance ?G Getting)
              (agent ?G ?X)
              (patient ?G Apple1))))))))

(=>
  (and
    (instance ?X Human)
    (attribute ?X Thirsty)
    (holdsDuring ?TIME  
      (desires ?X
        (not
          (attribute ?X Thirsty)))))
  (desires ?X
    (exists (?T)
      (and
        (instance ?T Translocation)
        (agent ?T ?X)
        (destination ?T Kitchen1)
        (during (WhenFn ?T) ?TIME)
        (hasPurpose ?T 
          (exists (?G)
            (and
              (instance ?G Getting)
              (agent ?G ?X)
              (patient ?G Milk1))))))))

(=>
  (and
    (instance ?X Human)
    (attribute ?X Bored)
    (holdsDuring ?TIME  
      (desires ?X
        (not
          (attribute ?X Bored)))))
  (desires ?X
    (exists (?T)
      (and
        (instance ?T Translocation)
        (agent ?T ?X)
        (destination ?T Garden1)
        (during (WhenFn ?T) ?TIME)
        (hasPurpose ?T 
          (exists (?R)
            (and
              (instance ?R RecreationOrExercise)
              (agent ?R ?X)
              (patient ?R Football1))))))))

(=>
  (and
    (instance ?X Human)
    (attribute ?X Tired)
    (holdsDuring ?TIME  
      (desires ?X
        (not
          (attribute ?X Tired)))))
  (desires ?X
    (exists (?T ?D)
      (and
        (instance ?T Translocation)
        (agent ?T ?X)
        (destination ?T Kitchen1)
        (during (WhenFn ?T) ?TIME)
        (instance ?D Dressing)
        (agent ?D ?X)
        (patient ?D Pajamas1)))))

;;
;; world_sizes.txt
;;

(termFormat Englishlanguage Suitcase "suitcase")
(instance Suitcase TravelContainer)

(termFormat Englishlanguage Container1 "container")
(instance Container1 Container)

(termFormat Englishlanguage Box1 "box")
(instance Box1 Box)

(documentation TreasureChest EnglishLanguage "A &%TreasureChest is a kind of &%SafeContainers, in which &%Criminals store
their stolen &%Artifacts.")
(subclass TreasureChest ContainerChest)
(subclass TreasureChest SafeContainer)
(termFormat EnglishLanguage TreasureChest "treasure chest")
(termFormat ChineseLanguage TreasureChest "宝箱")
(termFormat ChineseTraditionalLanguage TreasureChest "寶箱")

(=>
  (instance ?TC TreasureChest)
  (hasPurpose ?TC
    (exists (?K ?A ?THING ?S)
      (and
        (instance ?K Keeping)
        (agent ?K ?A)
        (instance ?A Human)
        (attribute ?A Criminal)
        (instance ?THING Artifact)
        (patient ?K ?THING)
        (instrument ?K ?TC)
        (earlier(WhenFn ?S) (WhenFn ?K))
        (instance ?S Stealing)
        (agent ?S ?A)
        (objectTransferred ?S ?THING)))))
        
(termFormat Englishlanguage TreasureChest1 "treasure chest")
(instance TreasureChest1 TreasureChest)

(documentation ChocolateCandy EnglishLanguage "A &%ChocolateCandy is a candy made of &%Sugar and &%Choclate.")
(subclass ChocolateCandy Chocolate)
(termFormat EnglishLanguage ChocolateCandy "chocolate candy")
(termFormat ChineseLanguage ChocolateCandy "巧克力糖")
(termFormat ChineseTraditionalLanguage ChocolateCandy " 巧克力糖")

(=>
  (instance ?CHOC ChocolateCandy)
  (and
    (material Chocolate ?CHOC)
    (material Sugar ?CHOC)))
      
(documentation BoxOfChocolates EnglishLanguage "A &%BoxOfChocolates is a &%UnitOfMeasure for &%ChocolateCandy. It has
a &%defaultMeasure of 250 &%Gram.")
(instance BoxOfChocolates UnitOfVolume)
(termFormat EnglishLanguage BoxOfChocolates "box of chocolate")
(termFormat ChineseLanguage BoxOfChocolates "一盒巧克力")
(termFormat ChineseTraditionalLanguage BoxOfChocolates " 一盒巧克力")

(exists (?B ?C)
  (and
    (instance ?B Box)
    (instance ?C ChocolateCandy)
    (contains ?B ?C)
    (defaultMeasure ?C
     (MeasureFn 1.0 BoxOfChocolates))))
    
(equal
  (MeasureFn 1.0 BoxOfChocolates)
  (MeasureFn 250.0 Gram))

(termFormat EnglishLanguage Chocolate1 "chocolate")
(and       
  (instance Chocolate1 ChocolateCandy)
  (measure Chocolate1
    (MeasureFn 0.5 BoxOfChocolates)))