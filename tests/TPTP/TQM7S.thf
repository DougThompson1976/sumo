include('SUMOonly.thf').

% from QMLTP problems http://www.iltp.de/qmltp/problems.html
% APM001+1.p converted to SUMO

%thf(worlds_tp,type,(w : $tType)).
%thf(modals_tp,type,(m : $tType)).

%thf(attribute_tp,type,(attribute : ($i > $i > w > $o))).
%thf(destination_tp,type,(destination : ($i > $i > w > $o))).
%thf(instance_tp,type,(instance : ($i > $i > $o))).
%thf(monetaryValue_tp,type,(monetaryValue : ($i > $i > w > $o))).
%thf(measureFn_tp,type,(measureFn : ($i > $i > $i))). % change $real to $i since THF doesn't support it
thf(accreln_tp,type,(s__accrelnP : ($m > $w > $w > $o))).

thf(firstClass_tp,type,(s__FirstClass : $i)).
thf(secondClass_tp,type,(s__SecondClass : $i)).
%thf(necessity_tp,type,(s__Necessity : $m)).
thf(flying_tp,type,(s__Flying : $i)).
thf(usDollar_tp,type,(s__USDollar : $i)).
thf(paris_tp,type,(s__Paris : $i)).
thf(myFlight_tp,type,(s__MyFlight : $i)).
thf(seventy_tp,type,(s__Seventy : $i)). % have to use symbols since numbers aren't supported
thf(ninetyFive_tp,type,(s__NinetyFive : $i)). % have to use symbols since numbers aren't supported

%thf(modalAttribute_tp,type,(modalAttribute : m)).

thf(axiom_t_modalAttribute,axiom,(! [W:$w] : ((s__accrelnP @ s__Necessity @ W @ W)))).

%qmf(law1, axiom,
%(#box : ((dest(paris) & class(first))  => s__price(s__Ninetyfive)))).

% (modalAttribute
%  (=> 
%    (and
%      (instance ?F Flying)
%      (attribute ?F FirstClass)
%      (destination ?F Paris))
%    (monetaryValue ?F (MeasureFn 95 USDollar)))
%    Necessity)
    
thf(kb1,axiom,
  (![W:$w, W2:$w] : 
    ((s__accrelnP @ s__Necessity @ W @ W2) =>
    (![F:$i]: (
      ((s__instance @ F @ s__Flying @ W2) & 
       (s__attribute @ F @ s__FirstClass @ W2) & 
       (s__destination @ F @ s__Paris @ W2)) =>
         (s__monetaryValue @ F @ (s__MeasureFn @ s__NinetyFive @ s__USDollar @ W2) @ W2)))))).
      
% qmf(law2, axiom,
%(#box : ((dest(paris) & class(second)) => price(seventy)))).

thf(kb2,axiom,
  (![W:$w, W2:$w] : 
    ((s__accrelnP @ s__Necessity @ W @ W2) =>
    (![F:$i]: (
      ((s__instance @ F @ s__Flying @ W2) & 
       (s__attribute @ F @ s__SecondClass @ W2) & 
       (s__destination @ F @ s__Paris @ W2)) =>
      (s__monetaryValue @ F @ (s__MeasureFn @ s__Seventy @ s__USDollar @ W2) @ W2)))))).

thf(kb3,axiom,(![W:$w]:
  ((s__instance @ s__MyFlight @ s__Flying @ W)))).
        
%qmf(law3, axiom,
%(#box : (~ (class(first) & class(second))))).
  
thf(kb4,axiom,
  (![W:$w, W2:$w] : 
    ((s__accrelnP @ s__Necessity @ W @ W2) =>
    (~ ((s__attribute @ s__MyFlight @ s__FirstClass @ W2) & 
        (s__attribute @ s__MyFlight @ s__SecondClass @ W2)))))).
        
%qmf(law4, axiom,
%(#box : (~ (price(ninetyfive) & price(seventy))))).

thf(kb5,axiom,
  (![W:$w, W2:$w] : 
    ((s__accrelnP @ s__Necessity @ W @ W2) =>
    (~ ((s__monetaryValue @ s__MyFlight @ (s__MeasureFn @ s__NinetyFive @ s__USDollar @ W2) @ W2) & 
        (s__monetaryValue @ s__MyFlight @ (s__MeasureFn @ s__Seventy @ s__USDollar @ W2) @ W2)))))).

%qmf(belief1, axiom,
%(#box : (dest(paris)))). 

thf(kb6,axiom,
  (![W:$w, W2:$w] : 
    ((s__accrelnP @ s__Necessity @ W @ W2) =>
    (s__destination @ s__MyFlight @ s__Paris @ W2)))).
        
%qmf(belief2, axiom,
%(#box : (class(second)))).

thf(kb7,axiom,
  (![W:$w, W2:$w] : 
    ((s__accrelnP @ s__Necessity @ W @ W2) =>
    (s__attribute @ s__MyFlight @ s__SecondClass @ W2)))).
    
%qmf(con, conjecture,
%(#box : (price(seventy)))).
% below working - Refutation

%thf(conj,conjecture,
%  (![W:$w, W2:$w] : 
%    (s__accrelnP(s__Necessity,W,W2) =>
%    (s__monetaryValue @ s__MyFlight @ (s__MeasureFn @ 70.0 @ s__USDollar @ W2) @ W2)))).
   
% below works but doesn't return the binding of 70.0 since the 
% existential isn't in the outermost scope

%thf(conj,conjecture,
%  (![W:$w, W2:$w] : (? [N:$real] : (
%    ((s__accrelnP @ s__necessity @ W @ W2) =>
%    (s__monetaryValue @ s__MyFlight @ (s__MeasureFn @ N @ s__USDollar @ W2) @ W2)))))).
       
% works with binding since existential is in outermost scope       
thf(conj,conjecture,
  (? [N:$i] : (![W:$w, W2:$w] : ( 
    ((s__accrelnP @ s__Necessity @ W @ W2) =>
    (s__monetaryValue @ s__MyFlight @ (s__MeasureFn @ N @ s__USDollar @ W2) @ W2)))))).
        
